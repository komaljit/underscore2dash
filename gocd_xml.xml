<?xml version="1.0" encoding="utf-8"?>
<cruise xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="cruise-config.xsd" schemaVersion="97">
  <server artifactsdir="artifacts" purgeStart="5.0" purgeUpto="7.0" agentAutoRegisterKey="1234567890" webhookSecret="7963bc20-e9db-41e6-bfe1-909f9714a8fd" commandRepositoryLocation="default" serverId="078fe799-c4a8-4be5-858e-be680f4f13c1">
    <elastic>
      <profiles>
        <profile id="go-agent-qa" pluginId="cd.go.contrib.elasticagent.kubernetes">
          <property>
            <key>Image</key>
            <value>us.gcr.master.openx.org/ox-registry/go-agent-qa:elastic</value>
          </property>
          <property>
            <key>MaxMemory</key>
            <value>2G</value>
          </property>
          <property>
            <key>MaxCPU</key>
            <value>0.5</value>
          </property>
          <property>
            <key>Environment</key>
            <value>CIDOMAIN=ci-api.openx.org</value>
          </property>
          <property>
            <key>PodConfiguration</key>
            <value>apiVersion: v1
kind: Pod
metadata:
  name: gocd--ci-api--go-agent-qa-{{ POD_POSTFIX }}
spec:
  containers:
    - name: go-agent-qa-{{ CONTAINER_POSTFIX }}
      image: us.gcr.master.openx.org/ox-registry/go-agent-qa:elastic
      imagePullPolicy: Always
      env:
        - name: CIDOMAIN
          value: ci-api.openx.org
      resources:
        requests:
          memory: "512M"
          cpu: "0.25"
        limits:
          memory: "2G"
          cpu: "0.5"</value>
          </property>
          <property>
            <key>SpecifiedUsingPodConfiguration</key>
            <value>true</value>
          </property>
        </profile>
        <profile id="go-agent-js" pluginId="cd.go.contrib.elasticagent.kubernetes">
          <property>
            <key>Image</key>
            <value>us.gcr.master.openx.org/ox-registry/go-agent-js:elastic</value>
          </property>
          <property>
            <key>MaxMemory</key>
            <value>2G</value>
          </property>
          <property>
            <key>MaxCPU</key>
            <value>0.5</value>
          </property>
          <property>
            <key>Environment</key>
            <value>CIDOMAIN=ci-api.openx.org</value>
          </property>
          <property>
            <key>PodConfiguration</key>
            <value>apiVersion: v1
kind: Pod
metadata:
  name: gocd--ci-api--go-agent-js-{{ POD_POSTFIX }}
spec:
  containers:
    - name: go-agent-js-{{ CONTAINER_POSTFIX }}
      image: us.gcr.master.openx.org/ox-registry/go-agent-js:elastic
      imagePullPolicy: Always
      env:
        - name: CIDOMAIN
          value: ci-api.openx.org
      resources:
        requests:
          memory: "500M"
          cpu: "0.25"
        limits:
          memory: "2G"
          cpu: "0.5"</value>
          </property>
          <property>
            <key>SpecifiedUsingPodConfiguration</key>
            <value>false</value>
          </property>
        </profile>
        <profile id="go-agent-base" pluginId="cd.go.contrib.elasticagent.kubernetes">
          <property>
            <key>Image</key>
            <value>us.gcr.master.openx.org/ox-registry/go-agent-base:elastic</value>
          </property>
          <property>
            <key>MaxMemory</key>
            <value>2G</value>
          </property>
          <property>
            <key>MaxCPU</key>
            <value>0.5</value>
          </property>
          <property>
            <key>Environment</key>
            <value>CIDOMAIN=ci-api.openx.org</value>
          </property>
          <property>
            <key>PodConfiguration</key>
            <value>apiVersion: v1
kind: Pod
metadata:
  name: gocd--ci-api--go-agent-base-{{ POD_POSTFIX }}
spec:
  containers:
    - name: go-agent-base-{{ CONTAINER_POSTFIX }}
      image: us.gcr.master.openx.org/ox-registry/go-agent-base:elastic
      imagePullPolicy: Always
      env:
        - name: CIDOMAIN
          value: ci-api.openx.org
      command: [ "runsvdir", "/etc/sv" ]
      resources:
        requests:
          memory: "250M"
          cpu: "0.25"
        limits:
          memory: "2G"
          cpu: "0.5"</value>
          </property>
          <property>
            <key>SpecifiedUsingPodConfiguration</key>
            <value>true</value>
          </property>
        </profile>
        <profile id="go-agent-python" pluginId="cd.go.contrib.elasticagent.kubernetes">
          <property>
            <key>Image</key>
            <value>us.gcr.master.openx.org/ox-registry/go-agent-python:elastic</value>
          </property>
          <property>
            <key>MaxMemory</key>
            <value>2G</value>
          </property>
          <property>
            <key>MaxCPU</key>
            <value>0.5</value>
          </property>
          <property>
            <key>Environment</key>
            <value>CIDOMAIN=ci-api.openx.org</value>
          </property>
          <property>
            <key>PodConfiguration</key>
            <value>apiVersion: v1
kind: Pod
metadata:
  name: gocd--ci-api--go-agent-python-{{ POD_POSTFIX }}
spec:
  containers:
    - name: go-agent-python-{{ CONTAINER_POSTFIX }}
      image: us.gcr.master.openx.org/ox-registry/go-agent-python:elastic
      imagePullPolicy: Always
      env:
        - name: CIDOMAIN
          value: ci-api.openx.org
      resources:
        requests:
          memory: "500M"
          cpu: "0.25"
        limits:
          memory: "2G"
          cpu: "0.5"</value>
          </property>
          <property>
            <key>SpecifiedUsingPodConfiguration</key>
            <value>true</value>
          </property>
        </profile>
        <profile id="go-agent-python-c7" pluginId="cd.go.contrib.elasticagent.kubernetes">
          <property>
            <key>Image</key>
            <value>us.gcr.master.openx.org/ox-registry/go-agent-python:centos7-elastic</value>
          </property>
          <property>
            <key>MaxMemory</key>
            <value>2G</value>
          </property>
          <property>
            <key>MaxCPU</key>
            <value>0.5</value>
          </property>
          <property>
            <key>Environment</key>
            <value>CIDOMAIN=ci-api.openx.org</value>
          </property>
          <property>
            <key>PodConfiguration</key>
            <value>apiVersion: v1
kind: Pod
metadata:
  name: gocd--ci-api--go-agent-python-c7-{{ POD_POSTFIX }}
spec:
  containers:
    - name: go-agent-python-c7-{{ CONTAINER_POSTFIX }}
      image: us.gcr.master.openx.org/ox-registry/go-agent-python:centos7-elastic
      imagePullPolicy: Always
      env:
        - name: CIDOMAIN
          value: ci-api.openx.org
      resources:
        requests:
          memory: "500M"
          cpu: "0.25"
        limits:
          memory: "2G"
          cpu: "0.5"</value>
          </property>
          <property>
            <key>SpecifiedUsingPodConfiguration</key>
            <value>true</value>
          </property>
        </profile>
        <profile id="go-agent-erlang" pluginId="cd.go.contrib.elasticagent.kubernetes">
          <property>
            <key>Image</key>
            <value />
          </property>
          <property>
            <key>MaxMemory</key>
            <value />
          </property>
          <property>
            <key>MaxCPU</key>
            <value />
          </property>
          <property>
            <key>Environment</key>
            <value />
          </property>
          <property>
            <key>PodConfiguration</key>
            <value>apiVersion: v1
kind: Pod
metadata:
  name: gocd--ci-api--go-agent-erlang-18-{{ POD_POSTFIX }}
spec:
  containers:
    - name: go-agent-erlang-18-{{ CONTAINER_POSTFIX }}
      image: us.gcr.master.openx.org/ox-registry/go-agent-erlang-18:elastic
      imagePullPolicy: Always
      env:
        - name: CIDOMAIN
          value: ci-api.openx.org
      resources:
        requests:
          memory: "500M"
          cpu: "0.5"
        limits:
          memory: "2G"
          cpu: "1"</value>
          </property>
          <property>
            <key>SpecifiedUsingPodConfiguration</key>
            <value>true</value>
          </property>
        </profile>
        <profile id="go-agent-python-c7-large" pluginId="cd.go.contrib.elasticagent.kubernetes">
          <property>
            <key>Image</key>
            <value>us.gcr.master.openx.org/ox-registry/go-agent-python:centos7-elastic</value>
          </property>
          <property>
            <key>MaxMemory</key>
            <value>4G</value>
          </property>
          <property>
            <key>MaxCPU</key>
            <value>0.5</value>
          </property>
          <property>
            <key>Environment</key>
            <value>CIDOMAIN=ci-api.openx.org</value>
          </property>
          <property>
            <key>PodConfiguration</key>
            <value>apiVersion: v1
kind: Pod
metadata:
  name: gocd--ci-api--go-agent-python-c7-{{ POD_POSTFIX }}
spec:
  containers:
    - name: go-agent-python-c7-{{ CONTAINER_POSTFIX }}
      image: us.gcr.master.openx.org/ox-registry/go-agent-python:centos7-elastic
      imagePullPolicy: Always
      env:
        - name: CIDOMAIN
          value: ci-api.openx.org
      resources:
        requests:
          memory: "500M"
          cpu: "0.25"
        limits:
          memory: "4G"
          cpu: "0.5"</value>
          </property>
          <property>
            <key>SpecifiedUsingPodConfiguration</key>
            <value>true</value>
          </property>
        </profile>
      </profiles>
    </elastic>
    <security>
      <authConfigs>
        <authConfig id="1c41d613-f4ab-4eec-b030-329ec91547bd" pluginId="cd.go.authentication.ldap">
          <property>
            <key>Url</key>
            <value>ldap://directory.master.openx.org:389</value>
          </property>
          <property>
            <key>ManagerDN</key>
            <value />
          </property>
          <property>
            <key>SearchBases</key>
            <value>ou=Users,dc=openx,dc=org</value>
          </property>
          <property>
            <key>UserLoginFilter</key>
            <value>(cn={0})</value>
          </property>
          <property>
            <key>Password</key>
            <encryptedValue />
          </property>
        </authConfig>
      </authConfigs>
      <roles>
        <role name="test">
          <users>
            <user>daniel.tian</user>
          </users>
        </role>
      </roles>
      <admins>
        <user>gocd</user>
        <user>andrew.adams</user>
        <user>bobby.messemer</user>
        <user>charles.huang</user>
        <user>daniel.tian</user>
        <user>emily.zhang</user>
        <user>jason.gordon</user>
        <user>ken.benavente</user>
        <user>laurentiu.badea</user>
        <user>luis.armendariz</user>
        <user>michael.fox</user>
        <user>miguel.dowgopoluk</user>
        <user>nicolas.pellier</user>
        <user>paul.selden</user>
        <user>stephanie.sim</user>
        <user>ted.sheibar</user>
        <user>federico.delgado</user>
        <user>chris.lim</user>
        <user>katherine.bedrosian</user>
        <user>randy.bloom</user>
        <user>jhansi.vennam</user>
        <user>peter.woo</user>
        <user>randell.beltran</user>
        <user>kyle.schustak</user>
        <user>scott.daniel</user>
        <user>brendon.crawford</user>
        <user>chieu.pham</user>
        <user>cezar.pokorski</user>
        <user>stavan.mehta</user>
        <user>kevin.wong</user>
        <user>obie.arize</user>
        <user>derek.kulinski</user>
        <user>joe.levis</user>
        <user>anthony.molinaro</user>
        <user>lukasz.grabowski</user>
        <user>curt.hesher</user>
        <user>israel.barco</user>
        <user>chai.hansanuwat</user>
        <user>daniel.spielman</user>
        <user>syed.zahedali</user>
        <user>ravikiran.remella</user>
        <user>jason.tan</user>
        <user>kurt.klein</user>
        <user>yunchen.sung</user>
        <user>daniel.szczyrba</user>
        <user>luigi.sayson</user>
        <user>komaljit.singh</user>
        <user>lukasz.sikora</user>
        <user>przemyslaw.herdzina</user>
        <user>pawel.sztur</user>
      </admins>
    </security>
    <mailhost hostname="mail.master.openx.org" port="25" tls="false" from="ci-api@openx.com" admin="releng+gocd-backups@openx.com" />
  </server>
  <scms>
    <scm id="7100fd6c-7fee-471d-b2f3-8b4ab138450e" name="pr">
      <pluginConfiguration id="github.pr" version="1" />
      <configuration>
        <property>
          <key>url</key>
          <value>github.com:openx/ox-api-jsondb.git</value>
        </property>
      </configuration>
    </scm>
    <scm id="29f82bf5-8544-456e-8f28-11210c32a3bb" name="ox3-api-v2-pr">
      <pluginConfiguration id="github.pr" version="1" />
      <configuration>
        <property>
          <key>url</key>
          <value>git@github-proxy.master.openx.org:openx/ox-api-core.git</value>
        </property>
      </configuration>
    </scm>
    <scm id="2e6ebd63-ad16-445a-b269-f4ec3a5cea32" name="ox-api-sqlcache-pr">
      <pluginConfiguration id="github.pr" version="1" />
      <configuration>
        <property>
          <key>url</key>
          <value>git@github-proxy.master.openx.org:openx/ox-api-sql.git</value>
        </property>
        <property>
          <key>defaultBranch</key>
          <value>develop</value>
        </property>
      </configuration>
    </scm>
    <scm id="2adfab02-bf38-4bc8-9f92-b88624bcfbcd" name="ox-api-audit-trail-pr">
      <pluginConfiguration id="github.pr" version="1" />
      <configuration>
        <property>
          <key>url</key>
          <value>git@github-proxy.master.openx.org:openx/ox-api-audit-trail.git</value>
        </property>
      </configuration>
    </scm>
    <scm id="cec93ba5-728e-48f9-ac19-3f16c167895c" name="ox-api-lib-pr">
      <pluginConfiguration id="github.pr" version="1" />
      <configuration>
        <property>
          <key>url</key>
          <value>git@github-proxy.master.openx.org:openx/ox-api-lib.git</value>
        </property>
      </configuration>
    </scm>
    <scm id="af24dc4a-70ea-429d-902e-ff0d9eec9f23" name="ox3-api-es-consumer-pr">
      <pluginConfiguration id="github.pr" version="1" />
      <configuration>
        <property>
          <key>url</key>
          <value>git@github-proxy.master.openx.org:openx/ox-api-es-consumer.git</value>
        </property>
      </configuration>
    </scm>
    <scm id="43430ac3-9978-4c2b-b017-342aedc9ebce" name="openx-python-rabbit-client-pr">
      <pluginConfiguration id="github.pr" version="1" />
      <configuration>
        <property>
          <key>url</key>
          <value>git@github-proxy.master.openx.org:openx/openx_python_rabbit_client.git</value>
        </property>
      </configuration>
    </scm>
    <scm id="d8ef93ad-de5c-4bc8-b599-a1b9d35a52b7" name="ox3-api-etl-consumer-pr">
      <pluginConfiguration id="github.pr" version="1" />
      <configuration>
        <property>
          <key>url</key>
          <value>git@github-proxy.master.openx.org:openx/ox-api-etl-consumer.git</value>
        </property>
      </configuration>
    </scm>
    <scm id="fa03bab1-2c80-450a-acbe-72d3a9b3e481" name="openx-python-logging-pr">
      <pluginConfiguration id="github.pr" version="1" />
      <configuration>
        <property>
          <key>url</key>
          <value>git@github-proxy.master.openx.org:openx/openx_python_logging.git</value>
        </property>
      </configuration>
    </scm>
    <scm id="65880561-bf0f-43d8-88b9-d95a1ef6fbd6" name="openx-python-uwsgirpc-client">
      <pluginConfiguration id="github.pr" version="1" />
      <configuration>
        <property>
          <key>url</key>
          <value>git@github-proxy.master.openx.org:openx/openx_python_uwsgirpc_client.git</value>
        </property>
      </configuration>
    </scm>
    <scm id="c60acb49-ff8e-4139-baba-7027587d457a" name="ox3-api-harmonizer">
      <pluginConfiguration id="github.pr" version="1" />
      <configuration>
        <property>
          <key>url</key>
          <value>git@github-proxy.master.openx.org:openx/ox3-api-harmonizer.git</value>
        </property>
      </configuration>
    </scm>
    <scm id="c9ee06ec-37ec-4fd4-894a-6de87aff981a" name="ox-api-router">
      <pluginConfiguration id="github.pr" version="1" />
      <configuration>
        <property>
          <key>url</key>
          <value>git@github-proxy.master.openx.org:openx/ox-api-router.git</value>
        </property>
        <property>
          <key>defaultBranch</key>
          <value>master</value>
        </property>
      </configuration>
    </scm>
    <scm id="b1a3c9fb-53fe-43ca-b8a6-38a73329b23b" name="perm-app-pr">
      <pluginConfiguration id="github.pr" version="1" />
      <configuration>
        <property>
          <key>url</key>
          <value>git@github-proxy.master.openx.org:openx/ox-api-perm-app.git</value>
        </property>
      </configuration>
    </scm>
    <scm id="035497b8-37f5-4ea2-8ad7-997943a1387f" name="perm-client-pr">
      <pluginConfiguration id="github.pr" version="1" />
      <configuration>
        <property>
          <key>url</key>
          <value>git@github-proxy.master.openx.org:openx/ox-api-perm-client-py.git</value>
        </property>
      </configuration>
    </scm>
  </scms>
  <pipelines group="setuptools-api-deploy_ETL_Consumer">
    <pipeline name="setuptools-devint-deploy" isLocked="false" template="setuptools-api-deploy-etl-consumer">
      <environmentvariables>
        <variable name="DEPLOY_CONTEXT">
          <value>devint</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-api-ci-scripts.git" dest="gocd-scripts" autoUpdate="false" materialName="gocd-scripts" />
      </materials>
    </pipeline>
    <pipeline name="setuptools-qa-deploy" isLocked="false" template="setuptools-api-deploy-etl-consumer">
      <environmentvariables>
        <variable name="DEPLOY_CONTEXT">
          <value>qa</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-api-ci-scripts.git" dest="gocd-scripts" autoUpdate="false" materialName="gocd-scripts" />
      </materials>
    </pipeline>
    <pipeline name="setuptools-staging-deploy" isLocked="false" template="setuptools-api-deploy-etl-consumer">
      <environmentvariables>
        <variable name="DEPLOY_CONTEXT">
          <value>staging</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-api-ci-scripts.git" dest="gocd-scripts" autoUpdate="false" materialName="gocd-scripts" />
      </materials>
    </pipeline>
    <pipeline name="setuptools-prod.xv-deploy" isLocked="false" template="setuptools-api-deploy-etl-consumer">
      <environmentvariables>
        <variable name="DEPLOY_CONTEXT">
          <value>prod.xv</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-api-ci-scripts.git" dest="gocd-scripts" autoUpdate="false" materialName="gocd-scripts" />
      </materials>
    </pipeline>
    <pipeline name="setuptools-prod.ca-deploy" isLocked="false" template="setuptools-api-deploy-etl-consumer">
      <environmentvariables>
        <variable name="DEPLOY_CONTEXT">
          <value>prod.ca</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-api-ci-scripts.git" dest="gocd-scripts" autoUpdate="false" materialName="gocd-scripts" />
      </materials>
    </pipeline>
  </pipelines>
  <pipelines group="build">
    <pipeline name="api-pgweb-build" template="builder-template">
      <environmentvariables>
        <variable name="BUILD_CONTEXT">
          <value>master</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ui-facade-aspd-gocd-scripts.git" dest="gocd-scripts" materialName="gocd-scripts">
          <filter>
            <ignore pattern="**" />
            <ignore pattern="**/*" />
          </filter>
        </git>
        <git url="git@github-proxy.master.openx.org:openx/ox-api-pgweb.git" branch="develop" dest="code" materialName="code" />
      </materials>
    </pipeline>
    <pipeline name="ox-api-router-build">
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-api-ci-scripts.git" dest="GoCD-Scripts" autoUpdate="false" />
        <git url="git@github-proxy.master.openx.org:openx/ox-api-router.git" dest="ox-api-router" materialName="ox-api-router" />
      </materials>
      <stage name="Build_and_Upload">
        <jobs>
          <job name="Build" elasticProfileId="go-agent-erlang">
            <tasks>
              <exec command="./GoCD-Scripts/bin/build-and-publish-rebar3-erlang-service">
                <arg>ox-api-router</arg>
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </pipelines>
  <pipelines group="tests-devint">
    <pipeline name="devint-oxbot" isLocked="false">
      <timer>0 0 5 1/1 * ? *</timer>
      <environmentvariables>
        <variable name="ENVIRONMENT">
          <value>devint</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/oxbot-core.git" branch="develop" shallowClone="true" dest="oxbot-core" autoUpdate="false" materialName="oxbot-core" />
        <git url="git@github-proxy.master.openx.org:openx/oxtest-api.git" branch="develop" shallowClone="true" dest="oxtest-api" autoUpdate="false" materialName="oxtest-api" />
        <pipeline pipelineName="devint-deploy-auto" stageName="upgrade-pkgs" materialName="api-devint-deploy" />
        <pipeline pipelineName="perm-app-deploy-dev" stageName="post" materialName="perm-app-devint-deploy" />
      </materials>
      <stage name="stage-1">
        <jobs>
          <job name="corp_customer">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v CORPORATE_INSTANCE_ID:468  -v PUB_INSTANCE_ID:608 -v INSTANCE_Id:479 -v AUTO_CONFIG_TAB:test_corporate_devint oxtest-api/tests_refactor/corporate_instance/customer</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <test src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="corp_datahub">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v CORPORATE_INSTANCE_ID:468 -v PUB_INSTANCE_ID:608 -v INSTANCE_Id:479 -v AUTO_CONFIG_TAB:test_corporate_devint oxtest-api/tests_refactor/corporate_instance/data_hub</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <test src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="corp_feeadjustment">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v CORPORATE_INSTANCE_ID:468 -v PUB_INSTANCE_ID:608 -v INSTANCE_Id:479 -v AUTO_CONFIG_TAB:test_corporate_devint oxtest-api/tests_refactor/corporate_instance/feeadjustment</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <test src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="corp_feeschedule">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v CORPORATE_INSTANCE_ID:468 -v PUB_INSTANCE_ID:608 -v INSTANCE_Id:479 -v AUTO_CONFIG_TAB:test_corporate_devint oxtest-api/tests_refactor/corporate_instance/feeschedule</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="corp_service_region">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v CORPORATE_INSTANCE_ID:468 -v PUB_INSTANCE_ID:608 -v INSTANCE_Id:479 -v AUTO_CONFIG_TAB:test_corporate_devint oxtest-api/tests_refactor/corporate_instance/service_region/user_service_region.robot</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="corp_user_access">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v CORPORATE_INSTANCE_ID:468 -v PUB_INSTANCE_ID:608 -v INSTANCE_Id:479 -v AUTO_CONFIG_TAB:test_corporate_devint oxtest-api/tests_refactor/corporate_instance/user_access/</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="corp_virtual_user">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v CORPORATE_INSTANCE_ID:468 -v PUB_INSTANCE_ID:608 -v INSTANCE_Id:479 -v AUTO_CONFIG_TAB:test_corporate_devint oxtest-api/tests_refactor/corporate_instance/virtual_user/</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="corp_publisher">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v CORPORATE_INSTANCE_ID:468 -v PUB_INSTANCE_ID:608 -v INSTANCE_Id:479 -v AUTO_CONFIG_TAB:test_corporate_devint oxtest-api/tests_refactor/corporate_instance/publisher/</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="perm_app">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v CORPORATE_INSTANCE_ID:468 -v PUB_INSTANCE_ID:608 -v INSTANCE_Id:479 -v AUTO_CONFIG_TAB:test_corporate_devint -v url:http://devint-api-permissions.xv.dc.openx.org oxtest-api/tests_refactor/internal_services/perm_app</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="axb_ads">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v INSTANCE_ID:607 -v TEST_USER:oxbot+master.admin@openx.com oxtest-api/tests_refactor/client_instance/axb/ads</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="axb_available_fields">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v INSTANCE_ID:607 -v TEST_USER:oxbot+master.admin@openx.com oxtest-api/tests_refactor/client_instance/axb/available_fields</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="axb_encryption_keys">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v INSTANCE_ID:607 -v TEST_USER:oxbot+master.admin@openx.com oxtest-api/tests_refactor/client_instance/axb/encryption_keys</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="axb_lineitem">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v INSTANCE_ID:607 -v TEST_USER:oxbot+master.admin@openx.com oxtest-api/tests_refactor/client_instance/axb/line_items</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="axb_options">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v INSTANCE_ID:607 -v TEST_USER:oxbot+master.admin@openx.com oxtest-api/tests_refactor/client_instance/axb/options</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="axb_orders">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v INSTANCE_ID:607 -v TEST_USER:oxbot+master.admin@openx.com oxtest-api/tests_refactor/client_instance/axb/orders</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="axb_ssrtb_acc">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v INSTANCE_ID:607 -v TEST_USER:oxbot+master.admin@openx.com oxtest-api/tests_refactor/client_instance/axb/ssrtb_accounts</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="axb_trafficset">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v INSTANCE_ID:607 -v TEST_USER:oxbot+master.admin@openx.com -v Retry_Timeout:5min oxtest-api/tests_refactor/client_instance/axb/trafficset</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="pub_adunits">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v INSTANCE_ID:608 -v TEST_USER:oxbot+master.admin@openx.com oxtest-api/tests_refactor/client_instance/publisher/adunits</arg>
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="pub_available_fields">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v INSTANCE_ID:608 -v TEST_USER:oxbot+master.admin@openx.com oxtest-api/tests_refactor/client_instance/publisher/available_fields</arg>
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="pub_bidreuse">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v INSTANCE_ID:608 -v TEST_USER:oxbot+master.admin@openx.com oxtest-api/tests_refactor/client_instance/publisher/bidreuse</arg>
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="pub_crud">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v INSTANCE_ID:608 -v TEST_USER:oxbot+master.admin@openx.com oxtest-api/tests_refactor/client_instance/publisher/crud</arg>
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="pub_deals">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v INSTANCE_ID:608 -v TEST_USER:oxbot+master.admin@openx.com oxtest-api/tests_refactor/client_instance/publisher/deals</arg>
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="pub_options">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v INSTANCE_ID:608 -v TEST_USER:oxbot+master.admin@openx.com oxtest-api/tests_refactor/client_instance/publisher/options</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="pub_packages">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v INSTANCE_ID:608 -v TEST_USER:oxbot+master.admin@openx.com -v CORPORATE_INSTANCE_ID:468 oxtest-api/tests_refactor/client_instance/publisher/packages</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="pub_sites">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v INSTANCE_ID:608 -v TEST_USER:oxbot+master.admin@openx.com oxtest-api/tests_refactor/client_instance/publisher/sites</arg>
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="corp_feecap">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v CORPORATE_INSTANCE_ID:468 -v PUB_INSTANCE_ID:608 -v INSTANCE_Id:479 -v AUTO_CONFIG_TAB:test_corporate_devint oxtest-api/tests_refactor/corporate_instance/feecap</arg>
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="corp_bidreuse">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v CORPORATE_INSTANCE_ID:468 -v PUB_INSTANCE_ID:608 -v INSTANCE_Id:479 -v AUTO_CONFIG_TAB:test_corporate_devint oxtest-api/tests_refactor/corporate_instance/bidreuse</arg>
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="axb_creatives">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v INSTANCE_ID:607 -v CORPORATE_INSTANCE_ID:468 -v TEST_USER:oxbot+master.admin@openx.com oxtest-api/tests_refactor/client_instance/axb/creatives</arg>
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="stage-2">
        <jobs>
          <job name="axb_endpoints">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v INSTANCE_ID:607 -v TEST_USER:oxbot+master.admin@openx.com oxtest-api/tests_refactor/client_instance/axb/endpoints</arg>
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="corp_partner">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v CORPORATE_INSTANCE_ID:468 -v PUB_INSTANCE_ID:608 -v INSTANCE_Id:479 -v AUTO_CONFIG_TAB:test_corporate_devint oxtest-api/tests_refactor/corporate_instance/partner</arg>
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </pipelines>
  <pipelines group="tests-qa">
    <pipeline name="qa-corporate_instance" isLocked="false">
      <timer>00 03 14 ? * MON-SUN</timer>
      <environmentvariables>
        <variable name="linear_video">
          <value>instance32</value>
        </variable>
        <variable name="non_axb_instance">
          <value>instance59</value>
        </variable>
        <variable name="axb_instance">
          <value>instance33</value>
        </variable>
        <variable name="corporate_instance">
          <value>test-corporate</value>
        </variable>
        <variable name="expected_values">
          <value>work_as_expected_values</value>
        </variable>
        <variable name="OXBOT_CMD">
          <value>oxbot</value>
        </variable>
        <variable name="OXTEST_API">
          <value>./oxtest-api</value>
        </variable>
        <variable name="OXTEST_E2E">
          <value>./oxtest-e2e</value>
        </variable>
        <variable name="CMP_CONFIG">
          <value>/opt/share/cmp_config.config</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/oxtest-api.git" branch="develop" shallowClone="true" dest="oxtest-api" autoUpdate="false">
          <filter>
            <ignore pattern="**,**/*" />
          </filter>
        </git>
        <git url="git@github-proxy.master.openx.org:openx/oxbot-core.git" branch="develop" shallowClone="true" dest="oxbot-core" autoUpdate="false" materialName="oxbot-core" />
      </materials>
      <stage name="S1">
        <approval type="manual" />
        <jobs>
          <job name="partners">
            <tasks>
              <exec command="/usr/bin/env">
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot --exclude quarantine oxtest-api/tests_refactor/corporate_instance/partner/</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
            </artifacts>
          </job>
          <job name="customer">
            <tasks>
              <exec command="/usr/bin/env">
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot --exclude quarantine oxtest-api/tests_refactor/corporate_instance/customer</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
            </artifacts>
          </job>
          <job name="feeschedule">
            <tasks>
              <exec command="/usr/bin/env">
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot --exclude quarantine oxtest-api/tests_refactor/corporate_instance/feeschedule/</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
            </artifacts>
          </job>
          <job name="user_access">
            <tasks>
              <exec command="/usr/bin/env">
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot --exclude quarantine oxtest-api/tests_refactor/corporate_instance/user_access/</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
            </artifacts>
          </job>
          <job name="service_region">
            <tasks>
              <exec command="/usr/bin/env">
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot --exclude quarantine oxtest-api/tests_refactor/corporate_instance/service_region</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
            </artifacts>
          </job>
          <job name="virtual_user">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot --exclude quarantine oxtest-api/tests_refactor/corporate_instance/virtual_user/</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
            </artifacts>
          </job>
          <job name="data_hub">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot --exclude quarantine oxtest-api/tests_refactor/corporate_instance/data_hub</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
          </job>
          <job name="feeadjustment">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot --exclude quarantine oxtest-api/tests_refactor/corporate_instance/feeadjustment</arg>
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
          </job>
          <job name="publisher">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot --exclude quarantine oxtest-api/tests_refactor/corporate_instance/publisher/</arg>
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
          </job>
          <job name="bidreuse">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine oxtest-api/tests_refactor/corporate_instance/bidreuse/</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
          </job>
          <job name="feecap">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot --exclude quarantine oxtest-api/tests_refactor/corporate_instance/feecap/</arg>
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="qa-axb">
      <timer>00 06 13 ? * MON-SUN</timer>
      <environmentvariables>
        <variable name="non_axb_instance">
          <value>instance32</value>
        </variable>
        <variable name="axb_instance">
          <value>instance33</value>
        </variable>
        <variable name="update_test_result">
          <value>True</value>
        </variable>
        <variable name="OXBOT_CMD">
          <value>oxbot</value>
        </variable>
        <variable name="OXTEST_API">
          <value>./oxtest-api</value>
        </variable>
        <variable name="OXTEST_E2E">
          <value>./oxtest-e2e</value>
        </variable>
        <variable name="CMP_CONFIG">
          <value>/opt/share/cmp_config.config</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/oxtest-api.git" branch="develop" shallowClone="true" dest="oxtest-api" autoUpdate="false">
          <filter>
            <ignore pattern="**" />
            <ignore pattern="**/*" />
          </filter>
        </git>
      </materials>
      <stage name="S1">
        <approval type="manual" />
        <jobs>
          <job name="adv_crud_options">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${non_axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/BEF/tests_options/options_market_advertiser_options_crud.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
            </artifacts>
          </job>
          <job name="market_adv_options">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${non_axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/BEF/tests_options/smoke_options_market_advertiser_options.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
            </artifacts>
          </job>
          <job name="market_new_acct_options">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${non_axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/BEF/tests_options/options_market_advertiser_options_and_new_account.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
            </artifacts>
          </job>
          <job name="object_options">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${non_axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/BEF/tests_object_options/exchange_audiencesegment_options.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
            </artifacts>
          </job>
          <job name="field_val">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${non_axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/BEF/tests_order/field_validation.robot</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
            </artifacts>
          </job>
          <job name="user">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${non_axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/BEF/tests_user</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="qa-ssp">
      <timer>00 09 14 ? * MON-SUN</timer>
      <environmentvariables>
        <variable name="non_axb_instance">
          <value>instance32</value>
        </variable>
        <variable name="axb_instance">
          <value>instance33</value>
        </variable>
        <variable name="update_test_result">
          <value>True</value>
        </variable>
        <variable name="OXBOT_CMD">
          <value>oxbot</value>
        </variable>
        <variable name="OXTEST_API">
          <value>./oxtest-api</value>
        </variable>
        <variable name="OXTEST_E2E">
          <value>./oxtest-e2e</value>
        </variable>
        <variable name="CMP_CONFIG">
          <value>/opt/share/cmp_config.config</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/oxtest-api.git" branch="develop" shallowClone="true" dest="oxtest-api" autoUpdate="false">
          <filter>
            <ignore pattern="**,**/*" />
          </filter>
        </git>
      </materials>
      <stage name="S1">
        <approval type="manual" />
        <jobs>
          <job name="operator_instance_root_user">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${non_axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/SSP/tests_account_operator_instance_masteruser</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
            </artifacts>
          </job>
          <job name="operator_instance_network_admin_user">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${non_axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/SSP/tests_account_operator_instance_rootuser</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
            </artifacts>
          </job>
          <job name="publisher_instance_root_user">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${non_axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/SSP/tests_account_publisher_instance_masteruser</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
            </artifacts>
          </job>
          <job name="publisher_instance_network_user">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${non_axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/SSP/tests_account_publisher_instance_rootuser</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
            </artifacts>
          </job>
          <job name="data_pull">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${non_axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} -v INSTANCE:${axb_instance} ./oxtest-api/SSP/tests_datapull</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
            </artifacts>
          </job>
          <job name="options_operator_instance_root_user">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${non_axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/SSP/tests_options_operator_instance_masteruser</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
            </artifacts>
          </job>
          <job name="options_operator_instance_network_admin_user">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${non_axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/SSP/tests_options_operator_instance_rootuser</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
            </artifacts>
          </job>
          <job name="options_publisher_instance_root_user">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${non_axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/SSP/tests_options_publisher_instance_masteruser</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
            </artifacts>
          </job>
          <job name="options_publsiher_instance_network_admin_user">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${non_axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/SSP/tests_options_publisher_instance_rootuser/opts_network_lineitem_deal_type.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
            </artifacts>
          </job>
          <job name="api_site">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${non_axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/SSP/tests_site</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="qa-etl">
      <timer>00 15 14 ? * MON-SUN</timer>
      <environmentvariables>
        <variable name="non_axb_instance">
          <value>instance32</value>
        </variable>
        <variable name="axb_instance">
          <value>instance33</value>
        </variable>
        <variable name="etl_instance">
          <value>api_etl_qa</value>
        </variable>
        <variable name="serv_instance">
          <value>api_regression_CA</value>
        </variable>
        <variable name="update_test_result">
          <value>True</value>
        </variable>
        <variable name="long_wait">
          <value>660</value>
        </variable>
        <variable name="short_wait">
          <value>330</value>
        </variable>
        <variable name="long_interval">
          <value>60</value>
        </variable>
        <variable name="short_interval">
          <value>20</value>
        </variable>
        <variable name="OXBOT_CMD">
          <value>oxbot</value>
        </variable>
        <variable name="OXTEST_API">
          <value>./oxtest-api</value>
        </variable>
        <variable name="OXTEST_E2E">
          <value>./oxtest-e2e</value>
        </variable>
        <variable name="CMP_CONFIG">
          <value>/opt/share/cmp_config.config</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/oxtest-api.git" branch="develop" shallowClone="true" dest="oxtest-api" autoUpdate="false">
          <filter>
            <ignore pattern="**,**/*" />
          </filter>
        </git>
        <git url="git@github-proxy.master.openx.org:openx/oxtest-e2e.git" shallowClone="true" dest="oxtest-e2e" autoUpdate="false">
          <filter>
            <ignore pattern="**,**/*" />
          </filter>
        </git>
        <git url="git@github-proxy.master.openx.org:openx/oxbot-core.git" branch="develop" shallowClone="true" dest="oxbot-core" autoUpdate="false" materialName="oxbot-core" />
      </materials>
      <stage name="S1">
        <approval type="manual" />
        <jobs>
          <job name="line_item_active_to_running">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} -v test_instance:${non_axb_instance} ./oxtest-api/Ad_Server/tests_etl/li_active_to_running.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
            </artifacts>
          </job>
          <job name="line_item_cloning">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} -v test_instance:${non_axb_instance} ./oxtest-api/Ad_Server/tests_etl/li_clone.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
            </artifacts>
          </job>
          <job name="line_item_expiring">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} -v test_instance:${non_axb_instance} ./oxtest-api/Ad_Server/tests_etl/li_expire.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
            </artifacts>
          </job>
          <job name="line_item_recycling">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} -v test_instance:${non_axb_instance} ./oxtest-api/Ad_Server/tests_etl/li_recycle.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
            </artifacts>
          </job>
          <job name="riakfs-api-etl">
            <tasks>
              <exec command="/usr/bin/env">
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} -v test_instance:${etl_instance} oxtest-api/tests_refactor/client_instance/etl/non-axb/adunit_lineitem_mapping.robot</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="qa-ad_server">
      <timer>00 18 13 ? * MON-SUN</timer>
      <environmentvariables>
        <variable name="non_axb_instance">
          <value>instance32</value>
        </variable>
        <variable name="update_test_result">
          <value>True</value>
        </variable>
        <variable name="OXBOT_CMD">
          <value>oxbot</value>
        </variable>
        <variable name="OXTEST_API">
          <value>./oxtest-api</value>
        </variable>
        <variable name="OXTEST_E2E">
          <value>./oxtest-e2e</value>
        </variable>
        <variable name="CMP_CONFIG">
          <value>/opt/share/cmp_config.config</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/oxtest-api.git" branch="develop" shallowClone="true" dest="oxtest-api" autoUpdate="false">
          <filter>
            <ignore pattern="**,**/*" />
          </filter>
        </git>
      </materials>
      <stage name="S1">
        <approval type="manual" />
        <jobs>
          <job name="object_options">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${non_axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/Ad_Server/tests_object_options</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
            </artifacts>
          </job>
          <job name="user">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${non_axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/Ad_Server/tests_user/user_acl_cache_update_regression.robot</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
            </artifacts>
          </job>
          <job name="listing_objects">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${non_axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/Ad_Server/tests_multi_objects/adv_order_li_ad_listing_with_external_id.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
            </artifacts>
          </job>
          <job name="account">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${non_axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/Ad_Server/tests_account</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
            </artifacts>
          </job>
          <job name="site">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${non_axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/Ad_Server/tests_site</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
            </artifacts>
          </job>
          <job name="ad">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${non_axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/Ad_Server/tests_ad</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
            </artifacts>
          </job>
          <job name="line_item">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${non_axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/Ad_Server/tests_lineitem</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
            </artifacts>
          </job>
          <job name="order">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${non_axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/Ad_Server/tests_order</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="qa-audit_trail">
      <timer>00 21 14 ? * MON-SUN</timer>
      <environmentvariables>
        <variable name="alerts_instance">
          <value>instance59</value>
        </variable>
        <variable name="update_test_result">
          <value>True</value>
        </variable>
        <variable name="OXBOT_CMD">
          <value>oxbot</value>
        </variable>
        <variable name="OXTEST_API">
          <value>./oxtest-api</value>
        </variable>
        <variable name="OXTEST_E2E">
          <value>./oxtest-e2e</value>
        </variable>
        <variable name="CMP_CONFIG">
          <value>/opt/share/cmp_config.config</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/oxtest-api.git" branch="develop" shallowClone="true" dest="oxtest-api" autoUpdate="false">
          <filter>
            <ignore pattern="**,**/*" />
          </filter>
        </git>
        <git url="git@github-proxy.master.openx.org:openx/oxbot-core.git" branch="develop" shallowClone="true" dest="oxbot-core" autoUpdate="false" materialName="oxbot-core" />
      </materials>
      <stage name="S1">
        <approval type="manual" />
        <jobs>
          <job name="audit_trail">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${alerts_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/Alerts/audit_trail/</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="qa-comments">
      <timer>00 24 13 ? * MON-SUN</timer>
      <environmentvariables>
        <variable name="alerts_instance">
          <value>instance59</value>
        </variable>
        <variable name="update_test_result">
          <value>True</value>
        </variable>
        <variable name="OXBOT_CMD">
          <value>oxbot</value>
        </variable>
        <variable name="OXTEST_API">
          <value>./oxtest-api</value>
        </variable>
        <variable name="OXTEST_E2E">
          <value>./oxtest-e2e</value>
        </variable>
        <variable name="CMP_CONFIG">
          <value>/opt/share/cmp_config.config</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/oxtest-api.git" branch="develop" shallowClone="true" dest="oxtest-api" autoUpdate="false">
          <filter>
            <ignore pattern="**,**/*" />
          </filter>
        </git>
      </materials>
      <stage name="S1">
        <approval type="manual" />
        <jobs>
          <job name="Comment_Tests">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${alerts_instance} --exclude quarantine -l NONE -o NONE -x NONE -r NONE -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/Alerts/Comments</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${alerts_instance} --exclude quarantine -l NONE -o NONE -x NONE -r NONE -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/Alerts/comment_user_permissions</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="qa-creative_templates">
      <timer>00 27 14 ? * MON-SUN</timer>
      <environmentvariables>
        <variable name="alerts_instance">
          <value>instance59</value>
        </variable>
        <variable name="update_test_result">
          <value>True</value>
        </variable>
        <variable name="OXBOT_CMD">
          <value>oxbot</value>
        </variable>
        <variable name="OXTEST_API">
          <value>./oxtest-api</value>
        </variable>
        <variable name="OXTEST_E2E">
          <value>./oxtest-e2e</value>
        </variable>
        <variable name="CMP_CONFIG">
          <value>/opt/share/cmp_config.config</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/oxtest-api.git" branch="develop" shallowClone="true" dest="oxtest-api" autoUpdate="false" materialName="oxtest-api">
          <filter>
            <ignore pattern="**" />
            <ignore pattern="**/*" />
          </filter>
        </git>
      </materials>
      <stage name="S1">
        <approval type="manual" />
        <jobs>
          <job name="user_access">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${alerts_instance} --exclude quarantine -l NONE -o NONE -x NONE -r NONE -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/Creative_Templates/permissions</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
            </artifacts>
          </job>
          <job name="positive">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${alerts_instance} --exclude quarantine -l NONE -o NONE -x NONE -r NONE -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/Creative_Templates/crtv_tmplt_basic_crud.robot</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
            </artifacts>
          </job>
          <job name="negative">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${alerts_instance} --exclude quarantine -l NONE -o NONE -x NONE -r NONE -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/Creative_Templates/crtv_tmplt_invalid_crud.robot</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
            </artifacts>
          </job>
          <job name="regression">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${alerts_instance} --exclude quarantine -l NONE -o NONE -x NONE -r NONE -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/Creative_Templates/ads</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
            </artifacts>
          </job>
          <job name="fields">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${alerts_instance} --exclude quarantine -l NONE -o NONE -x NONE -r NONE -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/Creative_Templates/object_validation</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="qa-elastic_search">
      <timer>00 30 13 ? * MON-SUN</timer>
      <environmentvariables>
        <variable name="alerts_instance">
          <value>instance59</value>
        </variable>
        <variable name="axb_instance">
          <value>instance33</value>
        </variable>
        <variable name="non_axb_instance">
          <value>instance32</value>
        </variable>
        <variable name="working_instance">
          <value>instance62</value>
        </variable>
        <variable name="update_test_result">
          <value>True</value>
        </variable>
        <variable name="OXBOT_CMD">
          <value>oxbot</value>
        </variable>
        <variable name="OXTEST_API">
          <value>./oxtest-api</value>
        </variable>
        <variable name="OXTEST_E2E">
          <value>./oxtest-e2e</value>
        </variable>
        <variable name="CMP_CONFIG">
          <value>/opt/share/cmp_config.config</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/oxtest-api.git" branch="develop" shallowClone="true" dest="oxtest-api" autoUpdate="false">
          <filter>
            <ignore pattern="**,**/*" />
          </filter>
        </git>
      </materials>
      <stage name="S1">
        <approval type="manual" />
        <jobs>
          <job name="smoke">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${alerts_instance} --exclude quarantine -l NONE -o NONE -x NONE -r NONE -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/Elastic_Search/smoke*</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
            </artifacts>
          </job>
          <job name="features">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${alerts_instance} --exclude quarantine -l NONE -o NONE -x NONE -r NONE -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} -v axb_instance:${axb_instance} -v non_axb_instance:${non_axb_instance} -v test_instance:${working_instance} ./oxtest-api/tests/features/elastic_search/</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
            </artifacts>
          </job>
          <job name="regression">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${alerts_instance} --exclude quarantine -l NONE -o NONE -x NONE -r NONE -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/Elastic_Search/es*</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
            </artifacts>
          </job>
          <job name="operator_targetable">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot --exclude quarantine oxtest-api/tests_refactor/client_instance/elastic_search</arg>
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="qa-market">
      <timer>00 33 14 ? * MON-SUN</timer>
      <environmentvariables>
        <variable name="non_axb_instance">
          <value>instance32</value>
        </variable>
        <variable name="update_test_result">
          <value>True</value>
        </variable>
        <variable name="OXBOT_CMD">
          <value>oxbot</value>
        </variable>
        <variable name="OXTEST_API">
          <value>./oxtest-api</value>
        </variable>
        <variable name="OXTEST_E2E">
          <value>./oxtest-e2e</value>
        </variable>
        <variable name="CMP_CONFIG">
          <value>/opt/share/cmp_config.config</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/oxtest-api.git" branch="develop" shallowClone="true" dest="oxtest-api" autoUpdate="false">
          <filter>
            <ignore pattern="**,**/*" />
          </filter>
        </git>
      </materials>
      <stage name="S1">
        <approval type="manual" />
        <jobs>
          <job name="instance_settings">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${non_axb_instance} --exclude quarantine -l NONE -o NONE -x NONE -r NONE -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/MARKET/t1_instance_setting</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
            </artifacts>
          </job>
          <job name="inventory_smoke">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${non_axb_instance} --exclude quarantine -l NONE -o NONE -x NONE -r NONE -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/MARKET/t2_inventory_smoke</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
            </artifacts>
          </job>
          <job name="optoins">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${non_axb_instance} --exclude quarantine -l NONE -o NONE -x NONE -r NONE -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/MARKET/t3_options</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
            </artifacts>
          </job>
          <job name="selling_rules">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${non_axb_instance} --exclude quarantine -l NONE -o NONE -x NONE -r NONE -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/MARKET/t3_optimization</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="qa-pmp">
      <timer>00 36 13 ? * MON-SUN</timer>
      <environmentvariables>
        <variable name="non_axb_instance">
          <value>instance32</value>
        </variable>
        <variable name="axb_instance">
          <value>instance33</value>
        </variable>
        <variable name="update_test_result">
          <value>True</value>
        </variable>
        <variable name="OXBOT_CMD">
          <value>oxbot</value>
        </variable>
        <variable name="OXTEST_API">
          <value>./oxtest-api</value>
        </variable>
        <variable name="OXTEST_E2E">
          <value>./oxtest-e2e</value>
        </variable>
        <variable name="CMP_CONFIG">
          <value>/opt/share/cmp_config.config</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/oxtest-api.git" branch="develop" shallowClone="true" dest="oxtest-api" autoUpdate="false" materialName="oxtest-api">
          <filter>
            <ignore pattern="**" />
            <ignore pattern="**/*" />
          </filter>
        </git>
        <git url="git@github-proxy.master.openx.org:openx/oxbot-core.git" branch="develop" shallowClone="true" dest="oxbot-core" autoUpdate="false" materialName="oxbot-core" />
      </materials>
      <stage name="S1">
        <approval type="manual" />
        <jobs>
          <job name="instance_and_feature_check_1">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v instance_pmp:${non_axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/PMP/t1_instance_setting</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
            </artifacts>
          </job>
          <job name="instance_and_feature_check_2">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v instance_pmp:${non_axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/PMP/t3_pmp_inactive</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
            </artifacts>
          </job>
          <job name="smoke">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v instance_pmp:${non_axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/PMP/t2_smoke</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
            </artifacts>
          </job>
          <job name="accounts">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v instance_pmp:${non_axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/tests_refactor/pmp/accounts</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
            </artifacts>
          </job>
          <job name="deal">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v instance_pmp:${non_axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/PMP/t3_deal</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
            </artifacts>
          </job>
          <job name="deal_permission">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v instance_pmp:${non_axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/PMP/t3_deal_permission</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
            </artifacts>
          </job>
          <job name="floor_rule">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v instance_pmp:${non_axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/PMP/t3_floorrule</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
            </artifacts>
          </job>
          <job name="floor_rule_permission">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v instance_pmp:${non_axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/PMP/t3_floorrule_permission</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
            </artifacts>
          </job>
          <job name="package">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v instance_pmp:${non_axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/PMP/t3_package</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Report" path="report/report.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <test src="oxresults/*/report.html" dest="oxresults" />
              <test src="oxresults/*/xunit.xml" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
            </artifacts>
          </job>
          <job name="package_permission">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v instance_pmp:${non_axb_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/PMP/t3_package_permission</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="qa-tests">
      <timer>00 39 14 ? * MON-SUN</timer>
      <environmentvariables>
        <variable name="alerts_instance">
          <value>instance59</value>
        </variable>
        <variable name="axb_instance">
          <value>api_regression_CA</value>
        </variable>
        <variable name="non_axb_instance">
          <value>instance32</value>
        </variable>
        <variable name="header_instance">
          <value>instance76</value>
        </variable>
        <variable name="OXBOT_CMD">
          <value>oxbot</value>
        </variable>
        <variable name="OXTEST_API">
          <value>./oxtest-api</value>
        </variable>
        <variable name="OXTEST_E2E">
          <value>./oxtest-e2e</value>
        </variable>
        <variable name="CMP_CONFIG">
          <value>/opt/share/cmp_config.config</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/oxtest-api.git" branch="develop" shallowClone="true" dest="oxtest-api" autoUpdate="false">
          <filter>
            <ignore pattern="**,**/*" />
          </filter>
        </git>
      </materials>
      <stage name="S1">
        <approval type="manual" />
        <jobs>
          <job name="exchange_advertiser_objects">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${alerts_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} -v test_instance:${axb_instance} ./oxtest-api/tests/crud/exchange_advertiser</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
            </artifacts>
          </job>
          <job name="full_access_publisher_objects">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${alerts_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/tests/crud/full_access_publisher</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
            </artifacts>
          </job>
          <job name="header_bidder_line_item">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${alerts_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} -v instance_header:${header_instance} ./oxtest-api/tests/features/header_bidder_li</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
            </artifacts>
          </job>
          <job name="publisher_features">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${alerts_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} -v test_instance:${non_axb_instance} ./oxtest-api/tests/features/publisher</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
            </artifacts>
          </job>
          <job name="line_items">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v test_instance:${alerts_instance} --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/tests/bug_regression/line_item/</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="qa-ir" isLocked="false">
      <timer>00 41 13 ? * MON-SUN</timer>
      <environmentvariables>
        <variable name="non_axb">
          <value>619</value>
        </variable>
        <variable name="axb">
          <value>625</value>
        </variable>
        <variable name="environment">
          <value>qa</value>
        </variable>
        <variable name="OXBOT_CMD">
          <value>oxbot</value>
        </variable>
        <variable name="OXTEST_API">
          <value>./oxtest-api</value>
        </variable>
        <variable name="OXTEST_E2E">
          <value>./oxtest-e2e</value>
        </variable>
        <variable name="CMP_CONFIG">
          <value>/opt/share/cmp_config.config</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/oxtest-api.git" branch="develop" shallowClone="true" dest="oxtest-api" autoUpdate="false">
          <filter>
            <ignore pattern="**,**/*" />
          </filter>
        </git>
      </materials>
      <stage name="S1">
        <approval type="manual" />
        <jobs>
          <job name="line_item_widget">
            <tasks>
              <exec command="/usr/bin/env">
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v instance_id:${non_axb} --nostatusrc --exclude quarantine -l NONE -o NONE -x NONE -r NONE -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/tests_refactor/ir/IR-4805-Dashboard_Line_Item_Permission.robot</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
            </artifacts>
          </job>
          <job name="ssrtb_qps_account">
            <tasks>
              <exec command="/usr/bin/env">
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v instance_id:${non_axb} --exclude quarantine -l NONE -o NONE -x NONE -r NONE -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} -v instance_id:${axb} ./oxtest-api/tests_refactor/ir/IR-4844-Setting_QPS.robot</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
            </artifacts>
          </job>
          <job name="site_cloning">
            <tasks>
              <exec command="/usr/bin/env">
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v instance_id:${non_axb} --exclude quarantine --loglevel INFO -l NONE -o NONE -x NONE -r NONE -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/tests_refactor/ir/IR-5015-Site_Cloning_With_ssrtb_timing_Field.robot</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="qa-ox3apiClient_smoke">
      <timer>00 44 14 ? * MON-SUN</timer>
      <environmentvariables>
        <variable name="non_axb">
          <value>619</value>
        </variable>
        <variable name="axb">
          <value>625</value>
        </variable>
        <variable name="environment">
          <value>qa</value>
        </variable>
        <variable name="OXTEST_API">
          <value>./oxtest-api</value>
        </variable>
        <variable name="OXTEST_E2E">
          <value>./oxtest-e2e</value>
        </variable>
        <variable name="CMP_CONFIG">
          <value>/opt/share/cmp_config.config</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/oxtest-api.git" branch="develop" shallowClone="true" dest="oxtest-api" autoUpdate="false">
          <filter>
            <ignore pattern="**,**/*" />
          </filter>
        </git>
      </materials>
      <stage name="S1" cleanWorkingDir="true">
        <approval type="manual" />
        <jobs>
          <job name="API-Tests">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v instance_id:${non_axb} --exclude quarantine -l NONE -o NONE -x NONE -r NONE -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/tests_refactor/client_instance/smoke/Display_Network.robot</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v instance_id:${non_axb} --exclude quarantine -l NONE -o NONE -x NONE -r NONE -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/tests_refactor/client_instance/smoke/Direct_Advertiser.robot</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v instance_id:${non_axb} --exclude quarantine -l NONE -o NONE -x NONE -r NONE -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} -v instance_id:${axb} --exclude TRAFFICSSH-288 ./oxtest-api/tests_refactor/client_instance/smoke/Exchange_Advertiser.robot</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v instance_id:${non_axb} --exclude quarantine -l NONE -o NONE -x NONE -r NONE -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/tests_refactor/client_instance/smoke/Enterprise_Publisher.robot</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v instance_id:${non_axb} --exclude quarantine -l NONE -o NONE -x NONE -r NONE -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/tests_refactor/client_instance/smoke/Login.robot</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="qa-ox3apiClient_axb">
      <timer>00 47 13 ? * MON-SUN</timer>
      <environmentvariables>
        <variable name="axb">
          <value>625</value>
        </variable>
        <variable name="environment">
          <value>qa</value>
        </variable>
        <variable name="OXBOT_CMD">
          <value>oxbot</value>
        </variable>
        <variable name="OXTEST_API">
          <value>./oxtest-api</value>
        </variable>
        <variable name="OXTEST_E2E">
          <value>./oxtest-e2e</value>
        </variable>
        <variable name="CMP_CONFIG">
          <value>/opt/share/cmp_config.config</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/oxtest-api.git" branch="develop" shallowClone="true" dest="oxtest-api" autoUpdate="false">
          <filter>
            <ignore pattern="**" />
            <ignore pattern="**/*" />
          </filter>
        </git>
        <git url="git@github-proxy.master.openx.org:openx/oxtest-e2e.git" dest="oxtest-e2e" autoUpdate="false" materialName="oxtest-e2e" />
      </materials>
      <stage name="S1">
        <approval type="manual" />
        <jobs>
          <job name="ads">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v instance_id:${axb} --exclude quarantine --loglevel INFO -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/tests_refactor/client_instance/axb/ads</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
            </artifacts>
          </job>
          <job name="available_fields">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v instance_id:${axb} --loglevel INFO --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/tests_refactor/client_instance/axb/available_fields</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
            </artifacts>
          </job>
          <job name="line_item">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v instance_id:${axb} --loglevel INFO --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/tests_refactor/client_instance/axb/line_items</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
            </artifacts>
          </job>
          <job name="options">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v instance_id:${axb} --loglevel INFO --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/tests_refactor/client_instance/axb/options</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
            </artifacts>
          </job>
          <job name="orders">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v instance_id:${axb} --loglevel INFO --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/tests_refactor/client_instance/axb/orders</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
            </artifacts>
          </job>
          <job name="ssrtb_accounts">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v instance_id:${axb} --loglevel INFO --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/tests_refactor/client_instance/axb/ssrtb_accounts</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
            </artifacts>
          </job>
          <job name="encryption_keys">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v instance_id:${axb} --loglevel INFO --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/tests_refactor/client_instance/axb/encryption_keys</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
            </artifacts>
          </job>
          <job name="trafficset">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot --loglevel INFO --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/tests_refactor/client_instance/axb/trafficset</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
            </artifacts>
          </job>
          <job name="creatives">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot --exclude quarantine oxtest-api/tests_refactor/client_instance/axb/creatives</arg>
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/log.html" dest="oxresults" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="S2">
        <jobs>
          <job name="endpoints">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot --loglevel INFO --exclude quarantine -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/tests_refactor/client_instance/axb/endpoints</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/report.html" dest="oxresults" />
              <artifact src="oxresults/*/xunit.xml" dest="oxresults" />
              <artifact src="oxresults/*/log.html" dest="oxresults" />
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="qa-ox3apiClient_publisher" isLocked="false">
      <timer>00 47 14 ? * MON-SUN</timer>
      <environmentvariables>
        <variable name="axb">
          <value>625</value>
        </variable>
        <variable name="non_axb">
          <value>619</value>
        </variable>
        <variable name="environment">
          <value>qa</value>
        </variable>
        <variable name="OXBOT_CMD">
          <value>oxbot</value>
        </variable>
        <variable name="OXTEST_API">
          <value>./oxtest-api</value>
        </variable>
        <variable name="OXTEST_E2E">
          <value>./oxtest-e2e</value>
        </variable>
        <variable name="CMP_CONFIG">
          <value>/opt/share/cmp_config.config</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/oxtest-api.git" branch="develop" shallowClone="true" dest="oxtest-api" autoUpdate="false">
          <filter>
            <ignore pattern="**,**/*" />
          </filter>
        </git>
        <git url="git@github-proxy.master.openx.org:openx/oxbot-core.git" branch="develop" shallowClone="true" dest="oxbot-core" autoUpdate="false">
          <filter>
            <ignore pattern="**" />
            <ignore pattern="**/*" />
          </filter>
        </git>
      </materials>
      <stage name="S1">
        <approval type="manual" />
        <jobs>
          <job name="deals">
            <tasks>
              <exec command="/usr/bin/env">
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot --exclude quarantine --loglevel INFO -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result}  ./oxtest-api/tests_refactor/client_instance/publisher/deals</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/latest" dest="reports" />
            </artifacts>
          </job>
          <job name="packages">
            <tasks>
              <exec command="/usr/bin/env">
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot --exclude quarantine --loglevel INFO -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/tests_refactor/client_instance/publisher/packages</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
              <artifact src="oxresults/latest" dest="reports" />
            </artifacts>
          </job>
          <job name="sites">
            <tasks>
              <exec command="/usr/bin/env">
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot --exclude quarantine --loglevel INFO -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/tests_refactor/client_instance/publisher/sites</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest" dest="reports" />
            </artifacts>
          </job>
          <job name="ad_units">
            <tasks>
              <exec command="/usr/bin/env">
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot --exclude quarantine --exclude linear_video_adunits --loglevel INFO -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} ./oxtest-api/tests_refactor/client_instance/publisher/adunits</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest" dest="reports" />
            </artifacts>
          </job>
          <job name="crud">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot --exclude quarantine oxtest-api/tests_refactor/client_instance/publisher/crud</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest" dest="reports" />
            </artifacts>
          </job>
          <job name="event_feed">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot --exclude quarantine oxtest-api/tests_refactor/client_instance/publisher/eventfeed</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest" dest="reports" />
            </artifacts>
          </job>
          <job name="available_fields">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot --exclude quarantine oxtest-api/tests_refactor/client_instance/publisher/available_fields</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest" dest="reports" />
            </artifacts>
          </job>
          <job name="options">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot --exclude quarantine oxtest-api/tests_refactor/client_instance/publisher/options/</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest" dest="reports" />
            </artifacts>
          </job>
          <job name="linearvideo_adunits">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot -v TEST_RUN_ID:2341 --exclude quarantine oxtest-api/tests_refactor/client_instance/publisher/adunits/</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest" dest="reports" />
            </artifacts>
          </job>
          <job name="linearvideo_adunit_ios_site">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot -v SITE:ios_site -v TEST_RUN_ID:2341 --exclude quarantine oxtest-api/tests_refactor/client_instance/publisher/adunits/Video_AdUnit_CRUD_Mobile.robot</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest" dest="reports" />
            </artifacts>
          </job>
          <job name="bidreuse">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot --exclude quarantine oxtest-api/tests_refactor/client_instance/publisher/bidreuse</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="qa-aq" isLocked="false">
      <timer>00 44 14 ? * MON-SUN</timer>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/oxtest-aq.git" shallowClone="true" dest="oxbot/oxtest_aq" autoUpdate="false">
          <filter>
            <ignore pattern="**/*" />
          </filter>
        </git>
        <git url="git@github-proxy.master.openx.org:openx/oxtest-e2e.git" shallowClone="true" dest="oxbot/oxtest-e2e" autoUpdate="false">
          <filter>
            <ignore pattern="**/*" />
          </filter>
        </git>
        <git url="git@github-proxy.master.openx.org:openx/oxtest-api.git" branch="develop" shallowClone="true" dest="oxbot/oxtest-api" autoUpdate="false">
          <filter>
            <ignore pattern="**/*" />
          </filter>
        </git>
      </materials>
      <stage name="network_tests">
        <jobs>
          <job name="run_tests">
            <tasks>
              <exec command="/bin/bash" workingdir="oxbot">
                <arg>-xc</arg>
                <arg>oxbot -i Account -v account_type:network oxtest_aq/components/OX3API/tests</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="publisher_tests">
        <jobs>
          <job name="run_tests">
            <tasks>
              <exec command="/bin/bash" workingdir="oxbot">
                <arg>-xc</arg>
                <arg>oxbot -i Account -v account_type:publisher oxtest_aq/components/OX3API/tests</arg>
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="site_tests">
        <jobs>
          <job name="run_tests">
            <tasks>
              <exec command="/bin/bash" workingdir="oxbot">
                <arg>-xc</arg>
                <arg>oxbot -i Account -v account_type:site oxtest_aq/components/OX3API/tests</arg>
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="optimization_tests">
        <jobs>
          <job name="run_tests">
            <tasks>
              <exec command="/bin/bash" workingdir="oxbot">
                <arg>-xc</arg>
                <arg>oxbot -i Optimization -v account_type:optimization oxtest_aq/components/OX3API/tests</arg>
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="test_mappings">
        <jobs>
          <job name="run_tests">
            <tasks>
              <exec command="/bin/bash" workingdir="oxbot">
                <arg>-xc</arg>
                <arg>oxbot -i MarketMappings oxtest_aq/components/OX3API/tests</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="qa-ox3apiInternal_Services">
      <timer>00 47 14 ? * MON-SUN</timer>
      <environmentvariables>
        <variable name="axb">
          <value>625</value>
        </variable>
        <variable name="non_axb">
          <value>619</value>
        </variable>
        <variable name="environment">
          <value>qa</value>
        </variable>
        <variable name="OXBOT_CMD">
          <value>oxbot</value>
        </variable>
        <variable name="OXTEST_API">
          <value>./oxtest-api</value>
        </variable>
        <variable name="OXTEST_E2E">
          <value>./oxtest-e2e</value>
        </variable>
        <variable name="CMP_CONFIG">
          <value>/opt/share/cmp_config.config</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/oxtest-api.git" branch="develop" shallowClone="true" dest="oxtest-api" autoUpdate="false">
          <filter>
            <ignore pattern="**" />
            <ignore pattern="**/*" />
          </filter>
        </git>
        <git url="git@github-proxy.master.openx.org:openx/oxbot-core.git" branch="develop" shallowClone="true" dest="oxbot-core" autoUpdate="false">
          <filter>
            <ignore pattern="**" />
            <ignore pattern="**/*" />
          </filter>
        </git>
      </materials>
      <stage name="S1">
        <approval type="manual" />
        <jobs>
          <job name="permission_app">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot --exclude quarantine oxtest-api/tests_refactor/internal_services/perm_app/</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </pipelines>
  <pipelines group="tests-prod">
    <pipeline name="prod-smoke-tests">
      <environmentvariables>
        <variable name="non_axb_instance">
          <value>prodQA</value>
        </variable>
        <variable name="update_test_result">
          <value>False</value>
        </variable>
        <variable name="OXBOT_CMD">
          <value>oxbot</value>
        </variable>
        <variable name="OXTEST_API">
          <value>./oxtest-api</value>
        </variable>
        <variable name="OXTEST_E2E">
          <value>./oxtest-e2e</value>
        </variable>
        <variable name="CMP_CONFIG">
          <value>/opt/share/cmp_config.config</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/oxtest-api.git" branch="develop" shallowClone="true" dest="oxtest-api" autoUpdate="false">
          <filter>
            <ignore pattern="**,**/*" />
          </filter>
        </git>
        <git url="git@github-proxy.master.openx.org:openx/oxtest-del.git" branch="develop" shallowClone="true" dest="oxtest-del" autoUpdate="false">
          <filter>
            <ignore pattern="**,**/*" />
          </filter>
        </git>
        <git url="git@github-proxy.master.openx.org:openx/oxtest-e2e.git" shallowClone="true" dest="oxtest-e2e" autoUpdate="false">
          <filter>
            <ignore pattern="**,**/*" />
          </filter>
        </git>
        <git url="git@github-proxy.master.openx.org:openx/oxtest-ssp.git" shallowClone="true" dest="oxtest-ssp" autoUpdate="false">
          <filter>
            <ignore pattern="**,**/*" />
          </filter>
        </git>
        <git url="git@github-proxy.master.openx.org:openx/oxtest-video.git" shallowClone="true" dest="oxtest_video" autoUpdate="false">
          <filter>
            <ignore pattern="**,**/*" />
          </filter>
        </git>
      </materials>
      <stage name="S1">
        <approval type="manual" />
        <jobs>
          <job name="accounts" elasticProfileId="go-agent-qa">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v instance:${non_axb_instance} --exclude quarantine -l NONE -o NONE -x NONE -r NONE -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} -v user:autobot@openx.com ./oxtest-api/smoke/smoke_account*</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
            </artifacts>
          </job>
          <job name="ad" elasticProfileId="go-agent-qa">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v instance:${non_axb_instance} --exclude quarantine -l NONE -o NONE -x NONE -r NONE -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} -v user:autobot@openx.com ./oxtest-api/smoke/smoke_ad.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
            </artifacts>
          </job>
          <job name="ad_unit" elasticProfileId="go-agent-qa">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v instance:${non_axb_instance} --exclude quarantine -l NONE -o NONE -x NONE -r NONE -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} -v user:autobot@openx.com ./oxtest-api/smoke/smoke_adunit.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
            </artifacts>
          </job>
          <job name="ad_unit_group" elasticProfileId="go-agent-qa">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v instance:${non_axb_instance} --exclude quarantine -l NONE -o NONE -x NONE -r NONE -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} -v user:autobot@openx.com ./oxtest-api/smoke/smoke_adunitgroup.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
            </artifacts>
          </job>
          <job name="conversion_tag" elasticProfileId="go-agent-qa">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v instance:${non_axb_instance} --exclude quarantine -l NONE -o NONE -x NONE -r NONE -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} -v user:autobot@openx.com ./oxtest-api/smoke/smoke_conversiontag.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
            </artifacts>
          </job>
          <job name="creative" elasticProfileId="go-agent-qa">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v instance:${non_axb_instance} --exclude quarantine -l NONE -o NONE -x NONE -r NONE -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} -v user:autobot@openx.com ./oxtest-api/smoke/smoke_creative.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
            </artifacts>
          </job>
          <job name="line_item" elasticProfileId="go-agent-qa">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v instance:${non_axb_instance} --exclude quarantine -l NONE -o NONE -x NONE -r NONE -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} -v user:autobot@openx.com ./oxtest-api/smoke/smoke_lineitem.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
            </artifacts>
          </job>
          <job name="optimization" elasticProfileId="go-agent-qa">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v instance:${non_axb_instance} --exclude quarantine -l NONE -o NONE -x NONE -r NONE -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} -v user:autobot@openx.com ./oxtest-api/smoke/smoke_optimization.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
            </artifacts>
          </job>
          <job name="order" elasticProfileId="go-agent-qa">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v instance:${non_axb_instance} --exclude quarantine -l NONE -o NONE -x NONE -r NONE -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} -v user:autobot@openx.com ./oxtest-api/smoke/smoke_order.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
            </artifacts>
          </job>
          <job name="payment_history" elasticProfileId="go-agent-qa">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v instance:${non_axb_instance} --exclude quarantine -l NONE -o NONE -x NONE -r NONE -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} -v user:autobot@openx.com ./oxtest-api/smoke/smoke_paymenthistory.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
            </artifacts>
          </job>
          <job name="site" elasticProfileId="go-agent-qa">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v instance:${non_axb_instance} --exclude quarantine -l NONE -o NONE -x NONE -r NONE -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} -v user:autobot@openx.com ./oxtest-api/smoke/smoke_site.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
            </artifacts>
          </job>
          <job name="site_section" elasticProfileId="go-agent-qa">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v instance:${non_axb_instance} --exclude quarantine -l NONE -o NONE -x NONE -r NONE -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} -v user:autobot@openx.com ./oxtest-api/smoke/smoke_sitesection.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
            </artifacts>
          </job>
          <job name="user" elasticProfileId="go-agent-qa">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>oxbot -v instance:${non_axb_instance} --exclude quarantine -l NONE -o NONE -x NONE -r NONE -v TEST_RUN_ID:2341 -v SUFFIX:_${GO_PIPELINE_NAME}_${GO_PIPELINE_COUNTER} -v UPDATE_TEST_RESULT:${update_test_result} -v user:autobot@openx.com ./oxtest-api/smoke/smoke_user*</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact src="oxresults/*/debug.log" dest="oxresults" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </pipelines>
  <pipelines group="api-hotfix--group">
    <pipeline name="devint--hotfix" labeltemplate="#{pkg_ox3_api_v2}-${COUNT}" isLocked="true">
      <params>
        <param name="pkg_ox3_api_v2">ox3-api-v2-4.65.1.2-1</param>
      </params>
      <environmentvariables>
        <variable name="DEPLOY_ENV">
          <value>devint</value>
        </variable>
        <variable name="pkg_ox3_api_v2">
          <value>#{pkg_ox3_api_v2}</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-api-ci-scripts.git" autoUpdate="false">
          <filter>
            <ignore pattern="**" />
            <ignore pattern="**/*" />
          </filter>
        </git>
      </materials>
      <stage name="hotfix-stage">
        <approval type="manual" />
        <jobs>
          <job name="hotfix-job">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>./deploy/hotfix-deploy.sh</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="qa--hotfix" labeltemplate="#{pkg_ox3_api_v2}-${COUNT}" isLocked="true">
      <params>
        <param name="pkg_ox3_api_v2">ox3-api-v2-4.73.1.2-1</param>
      </params>
      <environmentvariables>
        <variable name="DEPLOY_ENV">
          <value>qa</value>
        </variable>
        <variable name="pkg_ox3_api_v2">
          <value>#{pkg_ox3_api_v2}</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-api-ci-scripts.git" autoUpdate="false">
          <filter>
            <ignore pattern="**" />
            <ignore pattern="**/*" />
          </filter>
        </git>
      </materials>
      <stage name="hotfix-stage">
        <approval type="manual" />
        <jobs>
          <job name="hotfix-job">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>./deploy/hotfix-deploy.sh</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="staging--hotfix" labeltemplate="#{pkg_ox3_api_v2}-${COUNT}" isLocked="true">
      <params>
        <param name="pkg_ox3_api_v2">ox3-api-v2-4.73.1.2-1</param>
      </params>
      <environmentvariables>
        <variable name="DEPLOY_ENV">
          <value>staging</value>
        </variable>
        <variable name="pkg_ox3_api_v2">
          <value>#{pkg_ox3_api_v2}</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-api-ci-scripts.git" autoUpdate="false">
          <filter>
            <ignore pattern="**" />
            <ignore pattern="**/*" />
          </filter>
        </git>
      </materials>
      <stage name="hotfix-stage">
        <approval type="manual" />
        <jobs>
          <job name="hotfix-job">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>./deploy/hotfix-deploy.sh</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="prod.xv--hotfix" labeltemplate="#{pkg_ox3_api_v2}-${COUNT}" isLocked="true">
      <params>
        <param name="pkg_ox3_api_v2">ox3-api-v2-4.73.1.2-1</param>
      </params>
      <environmentvariables>
        <variable name="DEPLOY_ENV">
          <value>prod.xv</value>
        </variable>
        <variable name="pkg_ox3_api_v2">
          <value>#{pkg_ox3_api_v2}</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-api-ci-scripts.git" autoUpdate="false">
          <filter>
            <ignore pattern="**" />
            <ignore pattern="**/*" />
          </filter>
        </git>
      </materials>
      <stage name="hotfix-stage">
        <approval type="manual" />
        <jobs>
          <job name="hotfix-job">
            <tasks>
              <exec command="/usr/bin/env" />
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>./deploy/hotfix-deploy.sh</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </pipelines>
  <pipelines group="setuptools-build">
    <pipeline name="openx-python-mondemand--build" labeltemplate="${COUNT}.${repo[:7]}" isLocked="false" template="setuptools-python-build-template">
      <trackingtool link="https://jira.openx.com/browse/${ID}" regex="API-(\d+)" />
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-lib-mondemand-py.git" branch="develop" dest="repo" materialName="repo" />
        <git url="git@github-proxy.master.openx.org:openx/ox-api-ci-scripts.git" shallowClone="true" dest="gocd-scripts" autoUpdate="false" materialName="gocd-scripts" />
      </materials>
    </pipeline>
    <pipeline name="openx-python-config-parser--build" labeltemplate="${COUNT}.${repo[:7]}" isLocked="false" template="setuptools-python-build-template">
      <trackingtool link="https://jira.openx.com/browse/${ID}" regex="API-(\d+)" />
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-lib-config-py.git" branch="develop" dest="repo" materialName="repo" />
        <git url="git@github-proxy.master.openx.org:openx/ox-api-ci-scripts.git" shallowClone="true" dest="gocd-scripts" autoUpdate="false" materialName="gocd-scripts" />
      </materials>
    </pipeline>
    <pipeline name="openx-python-logging--build" labeltemplate="${COUNT}.${repo[:7]}" isLocked="false" template="setuptools-python-build-template">
      <trackingtool link="https://jira.openx.com/browse/${ID}" regex="API-(\d+)" />
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-lib-logging-py.git" branch="develop" dest="repo" materialName="repo" />
        <git url="git@github-proxy.master.openx.org:openx/ox-api-ci-scripts.git" shallowClone="true" dest="gocd-scripts" autoUpdate="false" materialName="gocd-scripts" />
      </materials>
    </pipeline>
    <pipeline name="openx-python-rabbit-client--build" labeltemplate="${COUNT}.${repo[:7]}" isLocked="false" template="setuptools-python-build-template">
      <trackingtool link="https://jira.openx.com/browse/${ID}" regex="API-(\d+)" />
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-lib-rabbitmq-py.git" branch="develop" dest="repo" materialName="repo" />
        <git url="git@github-proxy.master.openx.org:openx/ox-api-ci-scripts.git" shallowClone="true" dest="gocd-scripts" autoUpdate="false" materialName="gocd-scripts" />
      </materials>
    </pipeline>
    <pipeline name="ox3-api-datastore-python--build" labeltemplate="${COUNT}.${repo[:7]}" isLocked="false" template="setuptools-python-build-template">
      <trackingtool link="https://jira.openx.com/browse/${ID}" regex="API-(\d+)" />
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-api-riak.git" branch="develop" dest="repo" materialName="repo" />
        <git url="git@github-proxy.master.openx.org:openx/ox-api-ci-scripts.git" shallowClone="true" dest="gocd-scripts" autoUpdate="false" materialName="gocd-scripts" />
      </materials>
    </pipeline>
    <pipeline name="ox3-api-sqlcache--build" labeltemplate="${COUNT}.${repo[:7]}" isLocked="false" template="setuptools-python-build-template">
      <trackingtool link="https://jira.openx.com/browse/${ID}" regex="API-(\d+)" />
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-api-mariadb.git" branch="develop" dest="repo" materialName="repo" />
        <git url="git@github-proxy.master.openx.org:openx/ox-api-ci-scripts.git" shallowClone="true" dest="gocd-scripts" autoUpdate="false" materialName="gocd-scripts" />
      </materials>
    </pipeline>
    <pipeline name="ox-api-lib--build" labeltemplate="${COUNT}.${repo[:7]}" isLocked="false" template="setuptools-python-build-template">
      <trackingtool link="https://jira.openx.com/browse/${ID}" regex="API-(\d+)" />
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-api-lib.git" branch="develop" dest="repo" materialName="repo" />
        <git url="git@github-proxy.master.openx.org:openx/ox-api-ci-scripts.git" shallowClone="true" dest="gocd-scripts" autoUpdate="false" materialName="gocd-scripts" />
      </materials>
    </pipeline>
    <pipeline name="ox3-api-etl-consumer--build" labeltemplate="${COUNT}.${repo[:7]}" isLocked="false" template="setuptools-python-build-template">
      <trackingtool link="https://jira.openx.com/browse/${ID}" regex="API-(\d+)" />
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-api-etl-consumer.git" branch="develop" dest="repo" materialName="repo" />
        <git url="git@github-proxy.master.openx.org:openx/ox-api-ci-scripts.git" shallowClone="true" dest="gocd-scripts" autoUpdate="false" materialName="gocd-scripts" />
      </materials>
    </pipeline>
    <pipeline name="openx-service" labeltemplate="${COUNT}.${repo[:7]}" isLocked="false" template="setuptools-python-build-template">
      <trackingtool link="https://jira.openx.com/browse/${ID}" regex="API-(\d+)" />
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-lib-service-py.git" dest="repo" materialName="repo" />
        <git url="git@github-proxy.master.openx.org:openx/ox-api-ci-scripts.git" shallowClone="true" dest="gocd-scripts" autoUpdate="false" materialName="gocd-scripts" />
      </materials>
    </pipeline>
    <pipeline name="lift-crypto--build" labeltemplate="${COUNT}.${repo[:7]}" isLocked="false" template="setuptools-python-build-template">
      <trackingtool link="https://jira.openx.com/browse/${ID}" regex="API-(\d+)" />
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/lift-crypto.git" dest="repo" materialName="repo" />
        <git url="git@github-proxy.master.openx.org:openx/ox-api-ci-scripts.git" shallowClone="true" dest="gocd-scripts" autoUpdate="false" materialName="gocd-scripts" />
      </materials>
    </pipeline>
    <pipeline name="openx-python-uwsgi-client--build" labeltemplate="${COUNT}.${repo[:7]}" isLocked="false" template="setuptools-python-build-template">
      <trackingtool link="https://jira.openx.com/browse/${ID}" regex="API-(\d+)" />
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-lib-uwsgirpc-client-py.git" branch="develop" dest="repo" materialName="repo" />
        <git url="git@github-proxy.master.openx.org:openx/ox-api-ci-scripts.git" shallowClone="true" dest="gocd-scripts" autoUpdate="false" materialName="gocd-scripts" />
      </materials>
    </pipeline>
    <pipeline name="ox-api-sql--build" labeltemplate="${COUNT}.${repo[:7]}" isLocked="false" template="setuptools-python-build-template">
      <trackingtool link="https://jira.openx.com/browse/${ID}" regex="API-(\d+)" />
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-api-sql.git" branch="develop" dest="repo" materialName="repo" />
        <git url="git@github-proxy.master.openx.org:openx/ox-api-ci-scripts.git" shallowClone="true" dest="gocd-scripts" autoUpdate="false" materialName="gocd-scripts" />
      </materials>
    </pipeline>
    <pipeline name="ox-api-audit-trail--build" labeltemplate="${COUNT}.${repo[:7]}" isLocked="false" template="setuptools-python-build-template">
      <trackingtool link="https://jira.openx.com/browse/${ID}" regex="API-(\d+)" />
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-api-audit-trail.git" branch="develop" dest="repo" materialName="repo" />
        <git url="git@github-proxy.master.openx.org:openx/ox-api-ci-scripts.git" shallowClone="true" dest="gocd-scripts" autoUpdate="false" materialName="gocd-scripts" />
      </materials>
    </pipeline>
    <pipeline name="ox3-api-v2--build" labeltemplate="${COUNT}.${repo[:7]}" isLocked="false" template="setuptools-python-build-template">
      <trackingtool link="https://jira.openx.com/browse/${ID}" regex="API-(\d+)" />
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-api-core.git" branch="develop" dest="repo" materialName="repo" />
        <git url="git@github-proxy.master.openx.org:openx/ox-api-ci-scripts.git" shallowClone="true" dest="gocd-scripts" autoUpdate="false" materialName="gocd-scripts" />
      </materials>
    </pipeline>
    <pipeline name="ox3-api-es-consumer--build" labeltemplate="${COUNT}.${repo[:7]}" isLocked="false" template="setuptools-python-build-template">
      <trackingtool link="https://jira.openx.com/browse/${ID}" regex="API-(\d+)" />
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-api-es-consumer.git" branch="develop" dest="repo" materialName="repo" />
        <git url="git@github-proxy.master.openx.org:openx/ox-api-ci-scripts.git" shallowClone="true" dest="gocd-scripts" autoUpdate="false" materialName="gocd-scripts" />
      </materials>
    </pipeline>
  </pipelines>
  <pipelines group="api-permission-app">
    <pipeline name="perm-app-deploy-dev" isLocked="false" template="apie-deploy">
      <params>
        <param name="env">devint</param>
        <param name="BRANCH">develop</param>
      </params>
      <materials>
        <pipeline pipelineName="ox-api-perm-app-build-develop" stageName="push" />
        <git url="git@github-proxy.master.openx.org:openx/ox-api-perm-app.git" branch="#{BRANCH}" materialName="git" />
      </materials>
    </pipeline>
    <pipeline name="ox-api-perm-app-build-master" template="docker-build-push">
      <params>
        <param name="DOCKERTAG">stable</param>
        <param name="BRANCH">master</param>
      </params>
      <environmentvariables>
        <variable name="gcr_key_json" secure="true">
          <encryptedValue>Bpwki+niBLACBlK1faJ+Y5JSlcNXTB1/wrYuOLqZ/E8XCHCHlW5Yc5CvnOB5m/IoNC0pLiyRTwulw7MiR+0xBgaZsyWUTWWSebNrWsHfGJhLAmrTjjeFl5yhW7Hlj0xwP5U5VtJMeCOmn+8K8k8YVW2zoRNHbExoLJB4BhCdyhQbvexXnS6p5WbHLHFQgjO1h2Baly/gg1qdLMvR/r1AQdn/mxj8l55wEmmYICUy9OAjsGs0NHMemuSm9hFB+MDwDnFj5B6+9dukCP2KyK68U1ZuSA+AB8WOnKOAS6UhkfJSyPNHMUB5w0qleyqtJMmXK25Hy7UdbhV4nMef/UHLNrhM9r8RsiyP4KAHXtZfgS7m38F5i3krd/WY2NFx7I5DDYLX1dv/6hrLO5NFvwE/XcpJaDf4dsZ3LUgHCjBSAmWfiIPKCYcdyZTjzzmGzoO60jTwneK64D/5/VN3V9LNyNIwsGutwW72wxDtKNUNq3WAQN+BXxHQFHWbRlcAGzLpol4m0zFHsPRZqCjbL74yrnIUhQ3wbyFor7HKOxOOIXuzv55S0DHLJzr24oLQfSvv0V4EzTf7gcVQq9j7+x4SALB688qdARDfOeLzd3V6MGKLkWFyVrVzNGuSNpQrhUiBR37ouQ0IobgEjKvKDQ7Xm+tXJthLHDrGjBVmOnmZqZh3ItEH+s0NBdHLsTgK3qEkwzrUAtMx/wbNSynVWXT29bRcV/wX8Wv2cZxFs3dWzZhige7CMyChPyncVWKW1XJM+TkUs/VNKUR7C8Xl6154621AubvF3EihLB/XsIr1UfoT1c1mDwrLuAncTaeiGyz0NtlKiP+cU3PfwepF9JhGyxMPbl0EQLe6gzoEsXRNyCleus6/9k/3FKYxaJve9WzLfYl3oojYEB+HpoSvULShntO/KFOPQCuJ20VqftYWUfEGkbNCgne9OJgg8rsAF9Sk4tXFc5C3xTiO5kd7I1HFzW+ocFt7XfS7u+0LPYlx25UYj2Ffw9xGNSgJa4zsM9SA5qY5LYZe0rXUSiRuXkqoJ0p772KEcvo+EePee5sRFzLWRehz1Y4s/sC1dHw6WcoJL/hWFInNdVImtfaiWDR8SWYfsMUaHAKKCnMIDMOOjWnulRF5ThJBh6B9XlCwhON5j+bff1wxMmxHvUbB6Mcwp1M61KIr4SwR2ncvjY4mg0aLsXog4fgdMDFvz/Utd3vmqVU19cWcs+rwaqnR1/KrvR6iuwrrZzx0BC6+d0ECosgmxwFibNMlmPkA7OxYhtermIkp/0sB8fRcQeFIpxPP4MLztd2veAP8IbMtk3hQK1EuhJDreA5NotbGdGep6LNIwTlwV1MJcEhcvI4RnyR31vJpUkM6AiPc4DIBzQKRSlzopYRFhheym9jI+gVi71lgPLXALY6en6lZQIJGl2e/3/oGRZ5AhR3Rbgd6qVveA7nQlryn2FXZS/6OfPPf62//nGevahR3H3aQiVRm5M81M/ouoCXTGA0vy1mhyDUtSF3zC+PmqCo2jTcFj2I5dH2vS8Hvc3cEnlFCChStoYbGoqDFabMMEJUfOzuKnsvHixw12ZPxiFdq97S9UnYrFY7T7U/JJQ7FQchW5r0QX24La4GjVOgL0XMinA1wqcRR+/C6fF4vQYMjvmG1G/1n9MgUK5cIr1UWBwTxQHxVjpK9HE7+HzPRGTXs+Ff1j4ZN5WjEVIzYIQZKJ65gcWOiQJFhPe3dsMu7uxeJcgqpVsIjP12DDBWTmLPnxRu4u7R8KY2WUSYG7WW9W7kXtWX8Icw1zbzoz8UJrpNsLqsYSv7ezGxpNd9phA5w1+aVykD12sW2jVSDvRB/s3yg5TQ14J7XnpKdgC3PYgQyqpHMmbLIBNoRLCAm7tzWF3VpxAfnQxADbUEgLGm7VvuaL+4e1MhQax97rbV2pkFAIyyqyC5xkouQV4rrXF1+Q9V2BbxRUKJ02++5uvhyGw5PgPFUsWPWBpZBtAaoGe7XPKUq0k4HeUj8SXNnQbeux0P5oGNS7KCVkDydedtkHPhPLCSsojRGyZhxCtxAlcZPpeb3FyjuBNGXxQETdOFMLXg8Mh8pEqUasOKNXVaWmHcyMMb4r/2v/aLST7CZVR1cR7ucDDQWBfnyWU6c5uzj3cDY+SY9YDRKCrn+1xMSEEKHbGan0rqsuatyuxr4C798Q93WHlV5x1RdLn4SXRKhXRQKK/6cbiIJxQk4/n7X7AIEX4C7dlkWdNM5odWraA3l3qt7OYH7ByDmlpi6wbeu75NOsE7Yay0GvpXt1WWfS1xfzApoUciJRcuY6NF1gzC/TK/42Q/Z2Cpbhd+PAKlGN8ei1eFWLZ3oqRzWEmWmnU9NtYrPS9Rw3pPpnMdSV0TwMIoGIq6ejXT0krEPkV3yU1TK0j9YrljdqqQaT+Mkz6InSWrgorFlVQQAeguLYQq03oJWXTRLG7UTH5WGTxAvDeW2wO+9NTgFin9PIyYvONM61icrYhAiUpuHBdCDP31TOxW8C/q7BBRZMkkqvF2DneyrDQJieed8vPY5tdUTNJx+9YWKNY08dm1arDT1YEbf4rLsEoNjw05QvnIJ8lBLZLoIFS3GwathDmj0r1ibY7Xw2gdGQTV89EdLeUAlJkSy/D0oLeJoL0nz0+JeyrldX0YGQGeY60yGo6SKRtW3D8ll2OSKauUBXB0kwwHqUTLXhNKIE9gm+eqgLdVNQESV0W6fjBUbJj33Lmp5h75zQwKGKYKA71jQ0HTEI9d1gMJ01IOehshRIFLUqiqd5Z02vWXQ4iLtRWOSQzbcq7P/tvxQp9ZuyamSG930Py0bi3ZDm0Ac0Eq0zJYKEGJNN8v7BXhmY2K720QRHTjg705Q4+jGLfoRRJeQUDpkhxc+NrcHdVXH0NwRD/rk7su9u+YlQ3/h4pkRJE1Xa8MNY5GlTzdSKwkP/bDhQNywxO+ID4dvI0vMgsU8MteLJn1KBN7sBO9yEAtS0HxA2zwaWIkdG0id2/4vbZ7uNV5sRkz2WnOHtiaaf7zxFsZk+CRNU3UYnXDrk+JVFK9OWglM9ZVPwA==</encryptedValue>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-api-perm-app.git" />
      </materials>
    </pipeline>
    <pipeline name="ox-api-perm-app-pr" isLocked="false" template="make-test">
      <materials>
        <scm ref="b1a3c9fb-53fe-43ca-b8a6-38a73329b23b" />
      </materials>
    </pipeline>
    <pipeline name="ox-api-perm-app-build-develop" labeltemplate="${COUNT}-${git[:7]}" isLocked="false" template="docker-build-push">
      <params>
        <param name="BRANCH">develop</param>
        <param name="DOCKERTAG">latest</param>
      </params>
      <environmentvariables>
        <variable name="gcr_key_json" secure="true">
          <encryptedValue>GKPAMv0MoZTH8dAg2SDO4nJL/V8btBlonAu2+YXZNSu6hWti6yfM1KGNW3yD/1JwAAXR9x3y3kX/d7MrNVua7NlMSfWn9xFlvINdFnHXItftVXRwMTQYfQ2+6vT8AyAwLJbA4fuQ1KpE+DcUe6KGhmm6HupY17YjAs7qkVo+MpirgKLq4mBpKeKjedsA8inUVXQMAH0poFIWTcrCT1Y3x/7Txlkk7zMeVVQTLraNz8ephHZzazuQ1PYZQMfkWEubt8f0DxRPp2Uww8VQ2hyDGVzNRtDEfsu94RJczBGk1t9TQcAUeLq8a1fm7236Vu2YnYRrICrfpstyZ59e4Lm4/LOfiNzbluE8ARa9SurDyKs/aTunn1AAKI3qeQCHiyHueCNpssufLh2kdtvEymKTP2IP1ieU9qjL8h0d+FS2QUyPYgLqhfVfElNIoyLooUZRRPWqWkYB5fJsPwnc7baOLZPgH+MRDX0HQab6Y90B62H1PzD8qteIwxNVcw2Uvs0Axa8EW+eaUUJL6+mQojX+8KoNYoabKAlCH589Xm+FJa2YxhKdDI4piLqJvI2YglKaRcP6bujhL9czlh3syGnLwQZLu5W0bcK4zanOAxj31JuB3EQBfnJ+nV9vlRUZVoVjR/cwHqXyiYxTuC8nV4GheFje1HotKuVOP6yJOOWAk4hddsQpdmnkFeT+Ofj/AIk/vQIawagdSVB8rj1wzf0ZBTSpRxExY0XyNdcg57WKdlQI6C5TqnLUXvkPhu04+tYR9GVdkEBPE9kh3aSQ5E+jN+Txt9ePHf558yoXOQcAJTrgt+JWScReY78MkNyHZQ23ALtd36M/NHtuqxiWf8QfDvArrnUSTJAcivqfFldnBV7T3xA+JD0IZEsWPcWoofpEQZXJLSXypU1xcZX9IsflWyEW8dPd/oG3ptqsyVHU6d6qvD5wxBshhOPmalouS+/vcAeqm5Z7NXdmFvakqH74lP32s5QZUUGSCm/S2CIsVOaMKtHkgQowoIGFqtTLtWtr4GGmzXdXqTdO1GnLhSq9AKXG+z+fXJW0hGNK7Nh+2bllyKHj69s8dIiFe3BbcK4pUtNm4cMv+aQBGSwdmceEVDke9dHbKGsTPSENPxZ1fk/TgQyqJp6bu6ZoNmFRzDJZgpXviw6Nge7OCoJyTn1gbgEKDPzRXu84kchmbZ4L+FRc6zl76EHF/VV8f8EFjy6VkQwOmA1dvEh9ADb2EJK8iAkuKcfB3lPJPcDdZg/VJGySxMgPlFVB4GoEe5RGL88YzmMTeGZzJdEufAYMAW0u3X0S4lyQx/FG3/79f4BlJaCrc3CiPNxI29VIVUwrmaUSVZYybrfjxrrIgcE+fp+dmGFmEJkWcK5DM0q3FMsjz3o816P6gYfst/KFUb0yY2NvKUURZ8i1JhNRqOKaMIWl0wNjpqj6OiHY9Qia8nZnfHcfFTHM5EnBR2HdZXcweO1M8ZPrj7cxM2sU4EH0w6IbVbvYRrpJ2TISJlzGgdsZ3YnalxdE3zQ8kSYej7L6srinZklZBrrMFvlZDqqgFoYi6E+jNswdU8Yl8CH09/yF22M479lawz3yN+AhkA7wZNNjHLars3ao6ra7fR02w0crhkm/btvTdxv5ONcoKY4aBtjcYGHIE/u2RwmlMiglT6FpgdMEsQ6BG8Y4gxetOI4rBbWM05vSb6UDK9LXch7lJ30hvExmGqwsk4E/rrLT/crpZXXqpHcNdrv8wO/RASZTqmdlQ5WMYaqI1P7bwwYKcx8xk75DFV2pwgzdW9fERkp8Q73TG2H8znTAZ8kZ19JNz55NKf6Mifweqwg0auT4jJUHceeQxMBZxAE4cCrWZVBf3vHSfXFdqZlsImo09vTaiOONtXw3CEDHrKopqVAIIjyXo+RpUBuG+Qp73oMaNbOrl1i60J5vthkgcjmPfdbYJoCZa88SXW0JDjSkfuo79jD/ueQkMbk3FidLrr8E0pwQRF77uuGrC6M9El4kqQYGUILqEJDlKN0bppMrewRK1QN0XhROVbVccfT/PA7D2sYBnV2p770tFucZoxeELUC5QTkKEVYE1i1NeIhvd2unxH7xwa0OtMUjUl0d+zHtGg4ImZpXPTu/jS74aPPHUVr9V3/5WW8C6cxX4mZ05yQfWC2XaPsDQlKlADMTz6x2nE+k6Um+h6OXTdkDTz93rDtHhFNetldG5YroFS9S6WTBkc4E5dWdfJTSXeKIUIIAJKe2Ntg5lW262gt6Hjl/OXKHsXwg2XC/CnCAdylU+NufJ84xuecnpDJ49B+vT0jbvaZy5b95APrHEeAC6xe50TyGH/6MM4MEEOc8la01ZkpoE6Q+1xSrO6Wq1+touxAw0+CO33kb4oVwN75K9qvyEivNhC2OwI1NfRgF7PxTRyv+nxEpDnmNW0jtHBUN03vCAVLOoAmYnpfb3maJv9j4HnhyR/nhnQa7tHVXKjYw435xwtgD69eVhARK8szuEpT3dAkfgVhifY6E3rbMIOEPHPtBRIRaSU8kecqKu883PMBDJAJGT7yGD/QQo8uErM5Rn/w7HtDSrszTNZxmz5ztQBLE+tHgh9nz5yzxuQ1PgqkxuQ1nlFwI/6FtwFp3y+RAUvchi5NkdW533AN9BsdpIKnKXKHcbDvdtq/O0tJUYTORe0pwt5dwCsGgk5ZZvdXPFGLWl6fa30sAghxObllu3amOGqkXMdIf6ipuLu/hnkc3l8G/J95xUALnAvHe4FnK25ttNGb2FhC4GyRgBNVZ76+DQhT4oxh9gWSoNj2YFrlWsXLsp8hSnSD9uKGwCNlF7IMGVyBxgE2kJtu6jPTCtkQfmzjjztxOcJHPe9e9PLzLtCy7c+/MMyKuxrK4H7kOYi1n+74QAAmz6ZA68a7b64rhjeZUNFkgzXjki1QToOSVHMswUMokZV5OoB/YINd/tIC92BtvTavKtGQ6oG2mxD4o9d9hhsBKAxZYA6pp3tLRHYpGcJW6B64eyRHQrGEj9ax85griBDW4IveufyyFO3BnShf6eGAxciCr4IiOIrbfTKWQqqsqqJSfv/uF0HOmGQfn0/8D0MI0icmQwL9M/gFiIg==</encryptedValue>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-api-perm-app.git" branch="#{BRANCH}" materialName="git" />
      </materials>
    </pipeline>
    <pipeline name="ox-api-perm-app-pip-build-develop" template="make-pip-build">
      <params>
        <param name="BRANCH">develop</param>
      </params>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-api-perm-app.git" branch="#{BRANCH}" />
      </materials>
    </pipeline>
    <pipeline name="perm-app-deploy-qa" template="apie-deploy">
      <params>
        <param name="env">qa</param>
        <param name="BRANCH">master</param>
      </params>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-api-perm-app.git" branch="#{BRANCH}" />
        <pipeline pipelineName="ox-api-perm-app-build-master" stageName="push" materialName="built-master" />
      </materials>
    </pipeline>
    <pipeline name="perm-app-deploy-prod" labeltemplate="${COUNT}-#{APP_VERSION}" isLocked="true" template="perm-app-deploy-no-test">
      <params>
        <param name="env">prod</param>
        <param name="APP_VERSION">v0.1.5</param>
      </params>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-api-perm-app.git" materialName="perm-app-prod-deploy" />
      </materials>
    </pipeline>
    <pipeline name="perm-client-pr" template="make-test">
      <materials>
        <scm ref="035497b8-37f5-4ea2-8ad7-997943a1387f" />
      </materials>
    </pipeline>
    <pipeline name="perm-client-build-develop" template="make-pip-build">
      <params>
        <param name="BRANCH">develop</param>
      </params>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-api-perm-client-py.git" branch="develop" />
      </materials>
    </pipeline>
    <pipeline name="perm-app-deploy-staging" labeltemplate="${COUNT}-#{APP_VERSION}" isLocked="true" template="perm-app-deploy-no-test">
      <params>
        <param name="env">staging</param>
        <param name="APP_VERSION">v0.1.3</param>
      </params>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-api-perm-app.git" materialName="perm-app-prod-deploy" />
      </materials>
    </pipeline>
    <pipeline name="perm-app-deploy-staging-v2" labeltemplate="#{APP_VERSION}-${COUNT}" isLocked="true" template="perm-app-build-deploy-staging">
      <params>
        <param name="env">staging</param>
        <param name="APP_VERSION">v0.1.5</param>
        <param name="DOCKERTAG">latest</param>
      </params>
      <environmentvariables>
        <variable name="gcr_key_json" secure="true">
          <encryptedValue>Bpwki+niBLACBlK1faJ+Y5JSlcNXTB1/wrYuOLqZ/E8XCHCHlW5Yc5CvnOB5m/IoNC0pLiyRTwulw7MiR+0xBgaZsyWUTWWSebNrWsHfGJhLAmrTjjeFl5yhW7Hlj0xwP5U5VtJMeCOmn+8K8k8YVW2zoRNHbExoLJB4BhCdyhQbvexXnS6p5WbHLHFQgjO1h2Baly/gg1qdLMvR/r1AQdn/mxj8l55wEmmYICUy9OAjsGs0NHMemuSm9hFB+MDwDnFj5B6+9dukCP2KyK68U1ZuSA+AB8WOnKOAS6UhkfJSyPNHMUB5w0qleyqtJMmXK25Hy7UdbhV4nMef/UHLNrhM9r8RsiyP4KAHXtZfgS7m38F5i3krd/WY2NFx7I5DDYLX1dv/6hrLO5NFvwE/XcpJaDf4dsZ3LUgHCjBSAmWfiIPKCYcdyZTjzzmGzoO60jTwneK64D/5/VN3V9LNyNIwsGutwW72wxDtKNUNq3WAQN+BXxHQFHWbRlcAGzLpol4m0zFHsPRZqCjbL74yrnIUhQ3wbyFor7HKOxOOIXuzv55S0DHLJzr24oLQfSvv0V4EzTf7gcVQq9j7+x4SALB688qdARDfOeLzd3V6MGKLkWFyVrVzNGuSNpQrhUiBR37ouQ0IobgEjKvKDQ7Xm+tXJthLHDrGjBVmOnmZqZh3ItEH+s0NBdHLsTgK3qEkwzrUAtMx/wbNSynVWXT29bRcV/wX8Wv2cZxFs3dWzZhige7CMyChPyncVWKW1XJM+TkUs/VNKUR7C8Xl6154621AubvF3EihLB/XsIr1UfoT1c1mDwrLuAncTaeiGyz0NtlKiP+cU3PfwepF9JhGyxMPbl0EQLe6gzoEsXRNyCleus6/9k/3FKYxaJve9WzLfYl3oojYEB+HpoSvULShntO/KFOPQCuJ20VqftYWUfEGkbNCgne9OJgg8rsAF9Sk4tXFc5C3xTiO5kd7I1HFzW+ocFt7XfS7u+0LPYlx25UYj2Ffw9xGNSgJa4zsM9SA5qY5LYZe0rXUSiRuXkqoJ0p772KEcvo+EePee5sRFzLWRehz1Y4s/sC1dHw6WcoJL/hWFInNdVImtfaiWDR8SWYfsMUaHAKKCnMIDMOOjWnulRF5ThJBh6B9XlCwhON5j+bff1wxMmxHvUbB6Mcwp1M61KIr4SwR2ncvjY4mg0aLsXog4fgdMDFvz/Utd3vmqVU19cWcs+rwaqnR1/KrvR6iuwrrZzx0BC6+d0ECosgmxwFibNMlmPkA7OxYhtermIkp/0sB8fRcQeFIpxPP4MLztd2veAP8IbMtk3hQK1EuhJDreA5NotbGdGep6LNIwTlwV1MJcEhcvI4RnyR31vJpUkM6AiPc4DIBzQKRSlzopYRFhheym9jI+gVi71lgPLXALY6en6lZQIJGl2e/3/oGRZ5AhR3Rbgd6qVveA7nQlryn2FXZS/6OfPPf62//nGevahR3H3aQiVRm5M81M/ouoCXTGA0vy1mhyDUtSF3zC+PmqCo2jTcFj2I5dH2vS8Hvc3cEnlFCChStoYbGoqDFabMMEJUfOzuKnsvHixw12ZPxiFdq97S9UnYrFY7T7U/JJQ7FQchW5r0QX24La4GjVOgL0XMinA1wqcRR+/C6fF4vQYMjvmG1G/1n9MgUK5cIr1UWBwTxQHxVjpK9HE7+HzPRGTXs+Ff1j4ZN5WjEVIzYIQZKJ65gcWOiQJFhPe3dsMu7uxeJcgqpVsIjP12DDBWTmLPnxRu4u7R8KY2WUSYG7WW9W7kXtWX8Icw1zbzoz8UJrpNsLqsYSv7ezGxpNd9phA5w1+aVykD12sW2jVSDvRB/s3yg5TQ14J7XnpKdgC3PYgQyqpHMmbLIBNoRLCAm7tzWF3VpxAfnQxADbUEgLGm7VvuaL+4e1MhQax97rbV2pkFAIyyqyC5xkouQV4rrXF1+Q9V2BbxRUKJ02++5uvhyGw5PgPFUsWPWBpZBtAaoGe7XPKUq0k4HeUj8SXNnQbeux0P5oGNS7KCVkDydedtkHPhPLCSsojRGyZhxCtxAlcZPpeb3FyjuBNGXxQETdOFMLXg8Mh8pEqUasOKNXVaWmHcyMMb4r/2v/aLST7CZVR1cR7ucDDQWBfnyWU6c5uzj3cDY+SY9YDRKCrn+1xMSEEKHbGan0rqsuatyuxr4C798Q93WHlV5x1RdLn4SXRKhXRQKK/6cbiIJxQk4/n7X7AIEX4C7dlkWdNM5odWraA3l3qt7OYH7ByDmlpi6wbeu75NOsE7Yay0GvpXt1WWfS1xfzApoUciJRcuY6NF1gzC/TK/42Q/Z2Cpbhd+PAKlGN8ei1eFWLZ3oqRzWEmWmnU9NtYrPS9Rw3pPpnMdSV0TwMIoGIq6ejXT0krEPkV3yU1TK0j9YrljdqqQaT+Mkz6InSWrgorFlVQQAeguLYQq03oJWXTRLG7UTH5WGTxAvDeW2wO+9NTgFin9PIyYvONM61icrYhAiUpuHBdCDP31TOxW8C/q7BBRZMkkqvF2DneyrDQJieed8vPY5tdUTNJx+9YWKNY08dm1arDT1YEbf4rLsEoNjw05QvnIJ8lBLZLoIFS3GwathDmj0r1ibY7Xw2gdGQTV89EdLeUAlJkSy/D0oLeJoL0nz0+JeyrldX0YGQGeY60yGo6SKRtW3D8ll2OSKauUBXB0kwwHqUTLXhNKIE9gm+eqgLdVNQESV0W6fjBUbJj33Lmp5h75zQwKGKYKA71jQ0HTEI9d1gMJ01IOehshRIFLUqiqd5Z02vWXQ4iLtRWOSQzbcq7P/tvxQp9ZuyamSG930Py0bi3ZDm0Ac0Eq0zJYKEGJNN8v7BXhmY2K720QRHTjg705Q4+jGLfoRRJeQUDpkhxc+NrcHdVXH0NwRD/rk7su9u+YlQ3/h4pkRJE1Xa8MNY5GlTzdSKwkP/bDhQNywxO+ID4dvI0vMgsU8MteLJn1KBN7sBO9yEAtS0HxA2zwaWIkdG0id2/4vbZ7uNV5sRkz2WnOHtiaaf7zxFsZk+CRNU3UYnXDrk+JVFK9OWglM9ZVPwA==</encryptedValue>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:lukasz-sikora/ox-api-perm-app.git" branch="adding_git_tag_with_build_number" />
      </materials>
    </pipeline>
    <pipeline name="perm-app-build-deploy-dev" template="perm-app-build-deploy">
      <params>
        <param name="DOCKERTAG">latest</param>
        <param name="env">devint</param>
      </params>
      <environmentvariables>
        <variable name="gcr_key_json" secure="true">
          <encryptedValue>Bpwki+niBLACBlK1faJ+Y5JSlcNXTB1/wrYuOLqZ/E8XCHCHlW5Yc5CvnOB5m/IoNC0pLiyRTwulw7MiR+0xBgaZsyWUTWWSebNrWsHfGJhLAmrTjjeFl5yhW7Hlj0xwP5U5VtJMeCOmn+8K8k8YVW2zoRNHbExoLJB4BhCdyhQbvexXnS6p5WbHLHFQgjO1h2Baly/gg1qdLMvR/r1AQdn/mxj8l55wEmmYICUy9OAjsGs0NHMemuSm9hFB+MDwDnFj5B6+9dukCP2KyK68U1ZuSA+AB8WOnKOAS6UhkfJSyPNHMUB5w0qleyqtJMmXK25Hy7UdbhV4nMef/UHLNrhM9r8RsiyP4KAHXtZfgS7m38F5i3krd/WY2NFx7I5DDYLX1dv/6hrLO5NFvwE/XcpJaDf4dsZ3LUgHCjBSAmWfiIPKCYcdyZTjzzmGzoO60jTwneK64D/5/VN3V9LNyNIwsGutwW72wxDtKNUNq3WAQN+BXxHQFHWbRlcAGzLpol4m0zFHsPRZqCjbL74yrnIUhQ3wbyFor7HKOxOOIXuzv55S0DHLJzr24oLQfSvv0V4EzTf7gcVQq9j7+x4SALB688qdARDfOeLzd3V6MGKLkWFyVrVzNGuSNpQrhUiBR37ouQ0IobgEjKvKDQ7Xm+tXJthLHDrGjBVmOnmZqZh3ItEH+s0NBdHLsTgK3qEkwzrUAtMx/wbNSynVWXT29bRcV/wX8Wv2cZxFs3dWzZhige7CMyChPyncVWKW1XJM+TkUs/VNKUR7C8Xl6154621AubvF3EihLB/XsIr1UfoT1c1mDwrLuAncTaeiGyz0NtlKiP+cU3PfwepF9JhGyxMPbl0EQLe6gzoEsXRNyCleus6/9k/3FKYxaJve9WzLfYl3oojYEB+HpoSvULShntO/KFOPQCuJ20VqftYWUfEGkbNCgne9OJgg8rsAF9Sk4tXFc5C3xTiO5kd7I1HFzW+ocFt7XfS7u+0LPYlx25UYj2Ffw9xGNSgJa4zsM9SA5qY5LYZe0rXUSiRuXkqoJ0p772KEcvo+EePee5sRFzLWRehz1Y4s/sC1dHw6WcoJL/hWFInNdVImtfaiWDR8SWYfsMUaHAKKCnMIDMOOjWnulRF5ThJBh6B9XlCwhON5j+bff1wxMmxHvUbB6Mcwp1M61KIr4SwR2ncvjY4mg0aLsXog4fgdMDFvz/Utd3vmqVU19cWcs+rwaqnR1/KrvR6iuwrrZzx0BC6+d0ECosgmxwFibNMlmPkA7OxYhtermIkp/0sB8fRcQeFIpxPP4MLztd2veAP8IbMtk3hQK1EuhJDreA5NotbGdGep6LNIwTlwV1MJcEhcvI4RnyR31vJpUkM6AiPc4DIBzQKRSlzopYRFhheym9jI+gVi71lgPLXALY6en6lZQIJGl2e/3/oGRZ5AhR3Rbgd6qVveA7nQlryn2FXZS/6OfPPf62//nGevahR3H3aQiVRm5M81M/ouoCXTGA0vy1mhyDUtSF3zC+PmqCo2jTcFj2I5dH2vS8Hvc3cEnlFCChStoYbGoqDFabMMEJUfOzuKnsvHixw12ZPxiFdq97S9UnYrFY7T7U/JJQ7FQchW5r0QX24La4GjVOgL0XMinA1wqcRR+/C6fF4vQYMjvmG1G/1n9MgUK5cIr1UWBwTxQHxVjpK9HE7+HzPRGTXs+Ff1j4ZN5WjEVIzYIQZKJ65gcWOiQJFhPe3dsMu7uxeJcgqpVsIjP12DDBWTmLPnxRu4u7R8KY2WUSYG7WW9W7kXtWX8Icw1zbzoz8UJrpNsLqsYSv7ezGxpNd9phA5w1+aVykD12sW2jVSDvRB/s3yg5TQ14J7XnpKdgC3PYgQyqpHMmbLIBNoRLCAm7tzWF3VpxAfnQxADbUEgLGm7VvuaL+4e1MhQax97rbV2pkFAIyyqyC5xkouQV4rrXF1+Q9V2BbxRUKJ02++5uvhyGw5PgPFUsWPWBpZBtAaoGe7XPKUq0k4HeUj8SXNnQbeux0P5oGNS7KCVkDydedtkHPhPLCSsojRGyZhxCtxAlcZPpeb3FyjuBNGXxQETdOFMLXg8Mh8pEqUasOKNXVaWmHcyMMb4r/2v/aLST7CZVR1cR7ucDDQWBfnyWU6c5uzj3cDY+SY9YDRKCrn+1xMSEEKHbGan0rqsuatyuxr4C798Q93WHlV5x1RdLn4SXRKhXRQKK/6cbiIJxQk4/n7X7AIEX4C7dlkWdNM5odWraA3l3qt7OYH7ByDmlpi6wbeu75NOsE7Yay0GvpXt1WWfS1xfzApoUciJRcuY6NF1gzC/TK/42Q/Z2Cpbhd+PAKlGN8ei1eFWLZ3oqRzWEmWmnU9NtYrPS9Rw3pPpnMdSV0TwMIoGIq6ejXT0krEPkV3yU1TK0j9YrljdqqQaT+Mkz6InSWrgorFlVQQAeguLYQq03oJWXTRLG7UTH5WGTxAvDeW2wO+9NTgFin9PIyYvONM61icrYhAiUpuHBdCDP31TOxW8C/q7BBRZMkkqvF2DneyrDQJieed8vPY5tdUTNJx+9YWKNY08dm1arDT1YEbf4rLsEoNjw05QvnIJ8lBLZLoIFS3GwathDmj0r1ibY7Xw2gdGQTV89EdLeUAlJkSy/D0oLeJoL0nz0+JeyrldX0YGQGeY60yGo6SKRtW3D8ll2OSKauUBXB0kwwHqUTLXhNKIE9gm+eqgLdVNQESV0W6fjBUbJj33Lmp5h75zQwKGKYKA71jQ0HTEI9d1gMJ01IOehshRIFLUqiqd5Z02vWXQ4iLtRWOSQzbcq7P/tvxQp9ZuyamSG930Py0bi3ZDm0Ac0Eq0zJYKEGJNN8v7BXhmY2K720QRHTjg705Q4+jGLfoRRJeQUDpkhxc+NrcHdVXH0NwRD/rk7su9u+YlQ3/h4pkRJE1Xa8MNY5GlTzdSKwkP/bDhQNywxO+ID4dvI0vMgsU8MteLJn1KBN7sBO9yEAtS0HxA2zwaWIkdG0id2/4vbZ7uNV5sRkz2WnOHtiaaf7zxFsZk+CRNU3UYnXDrk+JVFK9OWglM9ZVPwA==</encryptedValue>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-api-perm-app.git" branch="develop" />
      </materials>
    </pipeline>
  </pipelines>
  <pipelines group="setuptools-api-deploy">
    <pipeline name="setuptools-api-deploy-devint" template="setuptools-api-deploy">
      <environmentvariables>
        <variable name="DEPLOY_CONTEXT">
          <value>devint</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-api-ci-scripts.git" dest="gocd-scripts" autoUpdate="false" />
      </materials>
    </pipeline>
    <pipeline name="setuptools-api-deploy-qa" template="setuptools-api-deploy">
      <environmentvariables>
        <variable name="DEPLOY_CONTEXT">
          <value>qa</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-api-ci-scripts.git" dest="gocd-scripts" autoUpdate="false" />
      </materials>
    </pipeline>
    <pipeline name="setuptools-api-deploy-staging" template="setuptools-api-deploy">
      <environmentvariables>
        <variable name="DEPLOY_CONTEXT">
          <value>staging</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-api-ci-scripts.git" dest="gocd-scripts" autoUpdate="false" />
      </materials>
    </pipeline>
    <pipeline name="setuptools-api-deploy-prod.xv" template="setuptools-api-deploy">
      <environmentvariables>
        <variable name="DEPLOY_CONTEXT">
          <value>prod.xv</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-api-ci-scripts.git" dest="gocd-scripts" autoUpdate="false" />
      </materials>
    </pipeline>
    <pipeline name="devint-deploy-auto" template="setuptools-api-deploy-auto">
      <environmentvariables>
        <variable name="DEPLOY_CONTEXT">
          <value>devint</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-api-ci-scripts.git" dest="gocd-scripts" autoUpdate="false" />
        <pipeline pipelineName="ox3-api-v2--build" stageName="python-setuptools-build" materialName="ox3-api-v2--build" />
      </materials>
    </pipeline>
    <pipeline name="setuptools-api-deploy-prod.ca" template="setuptools-api-deploy">
      <environmentvariables>
        <variable name="DEPLOY_CONTEXT">
          <value>prod.ca</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-api-ci-scripts.git" dest="gocd-scripts" autoUpdate="false" />
      </materials>
    </pipeline>
  </pipelines>
  <pipelines group="temp">
    <pipeline name="PR_checker_1" isLocked="false">
      <params>
        <param name="UPDATE_TESTRAIL">false</param>
      </params>
      <environmentvariables>
        <variable name="environment">
          <value>qa</value>
        </variable>
        <variable name="OXTEST_API">
          <value>kurt-klein/oxtest-api</value>
        </variable>
        <variable name="OXTEST_E2E">
          <value>oxbot/oxtest-e2e</value>
        </variable>
        <variable name="CMP_CONFIG">
          <value>/opt/share/cmp_config.config</value>
        </variable>
        <variable name="axb">
          <value>625</value>
        </variable>
        <variable name="non-axb">
          <value>619</value>
        </variable>
        <variable name="update_test_result">
          <value>false</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/oxtest-api.git" branch="APCLD-82_part2" shallowClone="true" dest="oxtest-api" autoUpdate="false" materialName="oxtest-api">
          <filter>
            <ignore pattern="**" />
            <ignore pattern="**/*" />
          </filter>
        </git>
        <git url="git@github-proxy.master.openx.org:openx/oxbot-core.git" branch="develop" shallowClone="true" dest="oxbot-core" autoUpdate="false" materialName="oxbot-core" />
      </materials>
      <stage name="S1">
        <approval type="manual" />
        <jobs>
          <job name="default">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine oxtest-api/tests_refactor/client_instance/publisher/packages/delete_package_with_deal.robot oxtest-api/tests_refactor/client_instance/publisher/deals/visibility.robot oxtest-api/tests_refactor/client_instance/publisher/deals/status.robot oxtest-api/tests_refactor/client_instance/publisher/deals/crud.robot oxtest-api/tests_refactor/client_instance/publisher/available_fields/deal_available_fields.robot</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="log.html" />
              <tab name="Report" path="report.html" />
              <tab name="Debug" path="debug.log" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/report.html" />
              <artifact src="oxresults/latest/log.html" />
              <artifact src="oxresults/latest/debug.log" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="Luigi_PR_Checker" isLocked="false">
      <environmentvariables>
        <variable name="axb">
          <value>625</value>
        </variable>
        <variable name="non_axb">
          <value>619</value>
        </variable>
        <variable name="environment">
          <value>qa</value>
        </variable>
        <variable name="OXBOT_CMD">
          <value>oxbot</value>
        </variable>
        <variable name="OXTEST_API">
          <value>./oxtest-api</value>
        </variable>
        <variable name="OXTEST_E2E">
          <value>./oxtest-e2e</value>
        </variable>
        <variable name="CMP_CONFIG">
          <value>/opt/share/cmp_config.config</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/oxtest-api.git" branch="CTV1-88,CTV1-90_ctv_ad_servers,dr=1" shallowClone="true" dest="oxtest-api" autoUpdate="false" materialName="oxtest-api">
          <filter>
            <ignore pattern="**" />
            <ignore pattern="**/*" />
          </filter>
        </git>
        <git url="git@github-proxy.master.openx.org:openx/oxbot-core.git" branch="develop" shallowClone="true" dest="oxbot-core" autoUpdate="false" materialName="oxbot-core">
          <filter>
            <ignore pattern="**" />
            <ignore pattern="**/*" />
          </filter>
        </git>
      </materials>
      <stage name="S1">
        <approval type="manual" />
        <jobs>
          <job name="linearvideo_site">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot -i linear_video_adunits --exclude quarantine oxtest-api/tests_refactor/client_instance/publisher/adunits/</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest" dest="reports" />
            </artifacts>
          </job>
          <job name="ios_site">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot -i linear_video_adunits --exclude quarantine -v SITE:ios_site oxtest-api/tests_refactor/client_instance/publisher/adunits/Video_AdUnit_CRUD_Mobile.robot</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest" dest="reports" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="Daniel_QA_PR_checker" isLocked="false">
      <environmentvariables>
        <variable name="ENVIRONMENT">
          <value>qa</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/oxbot-core.git" branch="develop" shallowClone="true" dest="oxbot-core" autoUpdate="false" materialName="oxbot-core" />
        <git url="git@github-proxy.master.openx.org:openx/oxtest-api.git" branch="develop" shallowClone="true" dest="oxtest-api" autoUpdate="false" materialName="oxtest-api" />
      </materials>
      <stage name="default">
        <approval type="manual" />
        <jobs>
          <job name="corp_customer">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT oxtest-api/tests_refactor/corporate_instance/customer</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <test src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="corp_datahub">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT oxtest-api/tests_refactor/corporate_instance/data_hub</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <test src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="corp_feeadjustment">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT oxtest-api/tests_refactor/corporate_instance/feeadjustment</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <test src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="corp_feeschedule">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT oxtest-api/tests_refactor/corporate_instance/feeschedule</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="corp_partner">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT oxtest-api/tests_refactor/corporate_instance/partner</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="corp_service_region">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT oxtest-api/tests_refactor/corporate_instance/service_region/user_service_region.robot</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="corp_user_access">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT oxtest-api/tests_refactor/corporate_instance/user_access/</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="corp_virtual_user">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT oxtest-api/tests_refactor/corporate_instance/virtual_user/</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="corp_publisher">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT oxtest-api/tests_refactor/corporate_instance/publisher/</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="perm_app">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT oxtest-api/tests_refactor/internal_services/perm_app</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="axb_ads">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT oxtest-api/tests_refactor/client_instance/axb/ads</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="axb_available_fields">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT oxtest-api/tests_refactor/client_instance/axb/available_fields</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="axb_encryption_keys">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT oxtest-api/tests_refactor/client_instance/axb/encryption_keys</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="axb_lineitem">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT oxtest-api/tests_refactor/client_instance/axb/line_items</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="axb_options">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT oxtest-api/tests_refactor/client_instance/axb/options</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="axb_orders">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT oxtest-api/tests_refactor/client_instance/axb/orders</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="axb_ssrtb_acc">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT oxtest-api/tests_refactor/client_instance/axb/ssrtb_accounts</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="axb_trafficset">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v Retry_Timeout:5min oxtest-api/tests_refactor/client_instance/axb/trafficset</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="PR_checker_2" isLocked="false">
      <params>
        <param name="UPDATE_TESTRAIL">false</param>
      </params>
      <environmentvariables>
        <variable name="environment">
          <value>qa</value>
        </variable>
        <variable name="OXTEST_API">
          <value>kurt-klein/oxtest-api</value>
        </variable>
        <variable name="OXTEST_E2E">
          <value>oxbot/oxtest-e2e</value>
        </variable>
        <variable name="CMP_CONFIG">
          <value>/opt/share/cmp_config.config</value>
        </variable>
        <variable name="axb">
          <value>625</value>
        </variable>
        <variable name="non-axb">
          <value>619</value>
        </variable>
        <variable name="update_test_result">
          <value>false</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:laurb9/oxtest-api.git" branch="APCLD-7-datacenter-options" dest="oxtest-api" autoUpdate="false" materialName="oxtest-api">
          <filter>
            <ignore pattern="**" />
            <ignore pattern="**/*" />
          </filter>
        </git>
        <git url="git@github-proxy.master.openx.org:openx/oxbot-core.git" branch="develop" shallowClone="true" dest="oxbot-core" autoUpdate="false" materialName="oxbot-core" />
      </materials>
      <stage name="S1">
        <approval type="manual" />
        <jobs>
          <job name="default">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine oxtest-api/tests_refactor/client_instance/axb/endpoints/Line_Item_Endpoint_Create.robot oxtest-api/tests_refactor/client_instance/axb/endpoints/Line_Item_Endpoint_Update.robot</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="log.html" />
              <tab name="Report" path="report.html" />
              <tab name="Debug" path="debug.log" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/report.html" />
              <artifact src="oxresults/latest/log.html" />
              <artifact src="oxresults/latest/debug.log" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </pipelines>
  <pipelines group="Auth_Service">
    <pipeline name="auth-service-build" labeltemplate="${COUNT}.${repo[:7]}" isLocked="false" template="setuptools-python-build-template">
      <environmentvariables>
        <variable name="VENV_BIN">
          <value>python3.6 -m venv</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-api-auth-service.git" branch="develop" dest="repo" materialName="repo" />
        <git url="git@github-proxy.master.openx.org:openx/ox-api-ci-scripts.git" shallowClone="true" dest="gocd-scripts" autoUpdate="false" materialName="gocd-scripts" />
      </materials>
    </pipeline>
    <pipeline name="auth-service-deploy-devint" template="setuptools-deploy">
      <environmentvariables>
        <variable name="DEPLOY_CONTEXT">
          <value>devint</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-api-ci-scripts.git" dest="gocd-scripts" autoUpdate="false" />
      </materials>
    </pipeline>
    <pipeline name="auth-service-deploy-qa" template="setuptools-deploy">
      <environmentvariables>
        <variable name="DEPLOY_CONTEXT">
          <value>qa</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/ox-api-ci-scripts.git" dest="gocd-scripts" autoUpdate="false" />
      </materials>
    </pipeline>
  </pipelines>
  <pipelines group="QA-CloudMigration">
    <pipeline name="gcp-devint" isLocked="false">
      <timer>0 0 4 1/1 * ? *</timer>
      <environmentvariables>
        <variable name="API_HOST">
          <value>ui.devint.gcp.openx.org</value>
        </variable>
        <variable name="ENVIRONMENT">
          <value>devint</value>
        </variable>
        <variable name="MOCK_SSO">
          <value>true</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="git@github-proxy.master.openx.org:openx/oxbot-core.git" branch="APCLD-142_host_header" shallowClone="true" dest="oxbot-core" autoUpdate="false" materialName="oxbot-core" />
        <git url="git@github-proxy.master.openx.org:openx/oxtest-api.git" branch="develop" shallowClone="true" dest="oxtest-api" autoUpdate="false" materialName="oxtest-api" />
      </materials>
      <stage name="stage-1">
        <approval type="manual" />
        <jobs>
          <job name="corp_customer">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v CORPORATE_INSTANCE_ID:468  -v PUB_INSTANCE_ID:608 -v INSTANCE_Id:479 -v AUTO_CONFIG_TAB:test_corporate_devint oxtest-api/tests_refactor/corporate_instance/customer</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <test src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="corp_datahub">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v CORPORATE_INSTANCE_ID:468 -v PUB_INSTANCE_ID:608 -v INSTANCE_Id:479 -v AUTO_CONFIG_TAB:test_corporate_devint oxtest-api/tests_refactor/corporate_instance/data_hub</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <test src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="corp_feeadjustment">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v CORPORATE_INSTANCE_ID:468 -v PUB_INSTANCE_ID:608 -v INSTANCE_Id:479 -v AUTO_CONFIG_TAB:test_corporate_devint oxtest-api/tests_refactor/corporate_instance/feeadjustment</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <test src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="corp_feeschedule">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v CORPORATE_INSTANCE_ID:468 -v PUB_INSTANCE_ID:608 -v INSTANCE_Id:479 -v AUTO_CONFIG_TAB:test_corporate_devint oxtest-api/tests_refactor/corporate_instance/feeschedule</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="corp_partner">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v CORPORATE_INSTANCE_ID:468 -v PUB_INSTANCE_ID:608 -v INSTANCE_Id:479 -v AUTO_CONFIG_TAB:test_corporate_devint oxtest-api/tests_refactor/corporate_instance/partner</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="corp_service_region">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v CORPORATE_INSTANCE_ID:468 -v PUB_INSTANCE_ID:608 -v INSTANCE_Id:479 -v AUTO_CONFIG_TAB:test_corporate_devint oxtest-api/tests_refactor/corporate_instance/service_region/user_service_region.robot</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="corp_user_access">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v CORPORATE_INSTANCE_ID:468 -v PUB_INSTANCE_ID:608 -v INSTANCE_Id:479 -v AUTO_CONFIG_TAB:test_corporate_devint oxtest-api/tests_refactor/corporate_instance/user_access/</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="corp_virtual_user">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v CORPORATE_INSTANCE_ID:468 -v PUB_INSTANCE_ID:608 -v INSTANCE_Id:479 -v AUTO_CONFIG_TAB:test_corporate_devint oxtest-api/tests_refactor/corporate_instance/virtual_user/</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="corp_publisher">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v CORPORATE_INSTANCE_ID:468 -v PUB_INSTANCE_ID:608 -v INSTANCE_Id:479 -v AUTO_CONFIG_TAB:test_corporate_devint oxtest-api/tests_refactor/corporate_instance/publisher/</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="perm_app">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v CORPORATE_INSTANCE_ID:468 -v PUB_INSTANCE_ID:608 -v INSTANCE_Id:479 -v AUTO_CONFIG_TAB:test_corporate_devint -v url:http://10.74.23.219:8097 oxtest-api/tests_refactor/internal_services/perm_app</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="axb_ads">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v INSTANCE_ID:607 -v TEST_USER:oxbot+master.admin@openx.com oxtest-api/tests_refactor/client_instance/axb/ads</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="axb_available_fields">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v INSTANCE_ID:607 -v TEST_USER:oxbot+master.admin@openx.com oxtest-api/tests_refactor/client_instance/axb/available_fields</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="axb_encryption_keys">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v INSTANCE_ID:607 -v TEST_USER:oxbot+master.admin@openx.com oxtest-api/tests_refactor/client_instance/axb/encryption_keys</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="axb_lineitem">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v INSTANCE_ID:607 -v TEST_USER:oxbot+master.admin@openx.com oxtest-api/tests_refactor/client_instance/axb/line_items</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="axb_options">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v INSTANCE_ID:607 -v TEST_USER:oxbot+master.admin@openx.com oxtest-api/tests_refactor/client_instance/axb/options</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="axb_orders">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v INSTANCE_ID:607 -v TEST_USER:oxbot+master.admin@openx.com oxtest-api/tests_refactor/client_instance/axb/orders</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="axb_ssrtb_acc">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v INSTANCE_ID:607 -v TEST_USER:oxbot+master.admin@openx.com oxtest-api/tests_refactor/client_instance/axb/ssrtb_accounts</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="axb_trafficset">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v INSTANCE_ID:607 -v TEST_USER:oxbot+master.admin@openx.com -v Retry_Timeout:5min oxtest-api/tests_refactor/client_instance/axb/trafficset</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="pub_adunits">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v INSTANCE_ID:608 -v TEST_USER:oxbot+master.admin@openx.com oxtest-api/tests_refactor/client_instance/publisher/adunits</arg>
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="pub_available_fields">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v INSTANCE_ID:608 -v TEST_USER:oxbot+master.admin@openx.com oxtest-api/tests_refactor/client_instance/publisher/available_fields</arg>
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="pub_bidreuse">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v INSTANCE_ID:608 -v TEST_USER:oxbot+master.admin@openx.com oxtest-api/tests_refactor/client_instance/publisher/bidreuse</arg>
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="pub_crud">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v INSTANCE_ID:608 -v TEST_USER:oxbot+master.admin@openx.com oxtest-api/tests_refactor/client_instance/publisher/crud</arg>
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="pub_deals">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v INSTANCE_ID:608 -v TEST_USER:oxbot+master.admin@openx.com oxtest-api/tests_refactor/client_instance/publisher/deals</arg>
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="pub_options">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v INSTANCE_ID:608 -v TEST_USER:oxbot+master.admin@openx.com oxtest-api/tests_refactor/client_instance/publisher/options</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="pub_packages">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v INSTANCE_ID:608 -v TEST_USER:oxbot+master.admin@openx.com -v CORPORATE_INSTANCE_ID:468 oxtest-api/tests_refactor/client_instance/publisher/packages</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="pub_sites">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v INSTANCE_ID:608 -v TEST_USER:oxbot+master.admin@openx.com oxtest-api/tests_refactor/client_instance/publisher/sites</arg>
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="corp_feecap">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v CORPORATE_INSTANCE_ID:468 -v PUB_INSTANCE_ID:608 -v INSTANCE_Id:479 -v AUTO_CONFIG_TAB:test_corporate_devint oxtest-api/tests_refactor/corporate_instance/feecap</arg>
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="corp_bidreuse">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v CORPORATE_INSTANCE_ID:468 -v PUB_INSTANCE_ID:608 -v INSTANCE_Id:479 -v AUTO_CONFIG_TAB:test_corporate_devint oxtest-api/tests_refactor/corporate_instance/bidreuse</arg>
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
          <job name="axb_creatives">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v INSTANCE_ID:607 -v CORPORATE_INSTANCE_ID:468 -v TEST_USER:oxbot+master.admin@openx.com oxtest-api/tests_refactor/client_instance/axb/creatives</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="stage-2">
        <jobs>
          <job name="axb_endpoints">
            <tasks>
              <exec command="/bin/bash">
                <arg>-xc</arg>
                <arg>PYTHONPATH=$(pwd)/oxbot-core:$(pwd)/oxbot-core/oxbot oxbot --exclude quarantine --exclude qa-only -v environment:$ENVIRONMENT -v INSTANCE_ID:607 -v TEST_USER:oxbot+master.admin@openx.com oxtest-api/tests_refactor/client_instance/axb/endpoints</arg>
              </exec>
            </tasks>
            <tabs>
              <tab name="Log" path="results/log.html" />
            </tabs>
            <resources>
              <resource>irobot</resource>
            </resources>
            <artifacts>
              <artifact src="oxresults/latest/*" dest="results/" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </pipelines>
  <templates>
    <pipeline name="pr">
      <stage name="run-tests">
        <jobs>
          <job name="run-unit-tests">
            <tasks>
              <exec command="sh">
                <arg>-c</arg>
                <arg>sudo yum install -y openx-artifactory-repo-testing postgresql95-libs-9.5.2-1PGDG.rhel5 openx-python-psycopg2 openx-python-sqlalchemy1.0 openx-python-pyzmq</arg>
                <runif status="passed" />
              </exec>
              <exec command="sh">
                <arg>-c</arg>
                <arg>if [ -n "$DEPENDENCIES" ]; then sudo yum update -y $DEPENDENCIES; fi</arg>
                <runif status="passed" />
              </exec>
              <exec command="sh" workingdir="pr">
                <arg>-c</arg>
                <arg>echo "python setup.py test"</arg>
                <runif status="passed" />
              </exec>
              <exec command="bash" workingdir="pr">
                <arg>-c</arg>
                <arg>/opt/bin/nosetests-2.6 --with-coverage --cover-package=. --with-xunit ${TEST_DIR:-test}/ --cover-html-dir=${TEST_REPORTS_DIR:-test/report}/ --exe --with-coverage --nocapture</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>centos-7</resource>
            </resources>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="builder-template">
      <stage name="build-stage">
        <jobs>
          <job name="build-job">
            <tasks>
              <exec command="./gocd-scripts/buildtools/builder.sh">
                <arg>do</arg>
                <arg>clean</arg>
                <runif status="passed" />
              </exec>
              <exec command="./gocd-scripts/buildtools/builder.sh">
                <arg>docker-run</arg>
                <arg>configure</arg>
                <runif status="passed" />
              </exec>
              <exec command="./gocd-scripts/buildtools/builder.sh">
                <arg>docker-run</arg>
                <arg>compile</arg>
                <runif status="passed" />
              </exec>
              <exec command="./gocd-scripts/buildtools/builder.sh">
                <arg>docker-run</arg>
                <arg>tests</arg>
                <runif status="passed" />
              </exec>
              <exec command="./gocd-scripts/buildtools/builder.sh">
                <arg>docker-run</arg>
                <arg>install</arg>
                <runif status="passed" />
              </exec>
              <exec command="./gocd-scripts/buildtools/builder.sh">
                <arg>docker-run</arg>
                <arg>package</arg>
                <runif status="passed" />
              </exec>
              <exec command="./gocd-scripts/buildtools/builder.sh">
                <arg>do</arg>
                <arg>publish</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>builder</resource>
              <resource>centos-7</resource>
            </resources>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="builder-template2">
      <stage name="build-stage">
        <jobs>
          <job name="build-job">
            <tasks>
              <exec command="./api-buildops/builder/builder.sh">
                <arg>docker-run</arg>
                <arg>clean</arg>
                <runif status="passed" />
              </exec>
              <exec command="./api-buildops/builder/builder.sh">
                <arg>docker-run</arg>
                <arg>all</arg>
                <runif status="passed" />
              </exec>
              <exec command="./api-buildops/builder/builder.sh">
                <arg>do</arg>
                <arg>publish</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>builder</resource>
              <resource>centos-7</resource>
            </resources>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="api-preprod-deploy-template">
      <stage name="pre-deploy">
        <approval type="manual" />
        <jobs>
          <job name="pre-deploy">
            <tasks>
              <exec command="./deploy/deploy.sh" workingdir="gocd-scripts">
                <arg>pre-deploy</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>centos-7</resource>
              <resource>deploy</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="upgrade-pkgs">
        <jobs>
          <job name="upgrade-api-pkgs">
            <tasks>
              <exec command="./deploy/deploy.sh" workingdir="gocd-scripts">
                <arg>upgrade-api-pkgs</arg>
              </exec>
            </tasks>
            <resources>
              <resource>centos-7</resource>
              <resource>deploy</resource>
            </resources>
          </job>
          <job name="upgrade-etl-pkgs">
            <tasks>
              <exec command="./deploy/deploy.sh" workingdir="gocd-scripts">
                <arg>upgrade-etl-pkgs</arg>
              </exec>
            </tasks>
            <resources>
              <resource>centos-7</resource>
              <resource>deploy</resource>
            </resources>
          </job>
          <job name="upgrade-etl-consumer-pkgs">
            <tasks>
              <exec command="./deploy/deploy.sh" workingdir="gocd-scripts">
                <arg>upgrade-etl-consumer-pkgs</arg>
              </exec>
            </tasks>
            <resources>
              <resource>centos-7</resource>
              <resource>deploy</resource>
            </resources>
          </job>
          <job name="upgrade-api-consumers-pkgs">
            <tasks>
              <exec command="./deploy/deploy.sh" workingdir="gocd-scripts">
                <arg>upgrade-api-consumers-pkgs</arg>
              </exec>
            </tasks>
            <resources>
              <resource>centos-7</resource>
              <resource>deploy</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="restart-services">
        <jobs>
          <job name="restart-api-service">
            <tasks>
              <exec command="./deploy/deploy.sh" workingdir="gocd-scripts">
                <arg>restart-api-service</arg>
              </exec>
            </tasks>
            <resources>
              <resource>centos-7</resource>
              <resource>deploy</resource>
            </resources>
          </job>
          <job name="restart-services-on-etl">
            <tasks>
              <exec command="./deploy/deploy.sh" workingdir="gocd-scripts">
                <arg>restart-services-on-etl</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>centos-7</resource>
              <resource>deploy</resource>
            </resources>
          </job>
          <job name="restart-etl-consumer">
            <tasks>
              <exec command="./deploy/deploy.sh" workingdir="gocd-scripts">
                <arg>restart-etl-consumer</arg>
              </exec>
            </tasks>
            <resources>
              <resource>centos-7</resource>
              <resource>deploy</resource>
            </resources>
          </job>
          <job name="restart-api-consumers">
            <tasks>
              <exec command="./deploy/deploy.sh" workingdir="gocd-scripts">
                <arg>restart-api-consumers</arg>
              </exec>
            </tasks>
            <resources>
              <resource>centos-7</resource>
              <resource>deploy</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="post-deploy">
        <jobs>
          <job name="post-deploy">
            <tasks>
              <exec command="./deploy/deploy.sh" workingdir="gocd-scripts">
                <arg>post-deploy</arg>
              </exec>
            </tasks>
            <resources>
              <resource>centos-7</resource>
              <resource>deploy</resource>
            </resources>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="make-test">
      <stage name="run-make-test" cleanWorkingDir="true">
        <jobs>
          <job name="run-tests">
            <tasks>
              <exec command="make">
                <arg>test</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>centos-7</resource>
              <resource>physical</resource>
            </resources>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="docker-build-push">
      <stage name="test">
        <jobs>
          <job name="make-test">
            <tasks>
              <exec command="make">
                <arg>test</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>centos-7</resource>
              <resource>physical</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="build">
        <jobs>
          <job name="make-docker-build">
            <tasks>
              <exec command="make">
                <arg>docker-build</arg>
                <arg>version=#{DOCKERTAG}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>centos-7</resource>
              <resource>physical</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="gcr-login">
        <jobs>
          <job name="gcr-login">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>echo "$gcr_key_json" | docker login -u _json_key --password-stdin https://us.gcr.master.openx.org</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>centos-7</resource>
              <resource>physical</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="push">
        <jobs>
          <job name="docker-push">
            <tasks>
              <exec command="make">
                <arg>docker-push</arg>
                <arg>version=#{DOCKERTAG}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>centos-7</resource>
              <resource>physical</resource>
            </resources>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="make-pip-build">
      <stage name="test">
        <jobs>
          <job name="make-test">
            <tasks>
              <exec command="make">
                <arg>test</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="build-and-push">
        <jobs>
          <job name="pip-build">
            <tasks>
              <exec command="make">
                <arg>pip-build</arg>
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
            </resources>
          </job>
          <job name="pip-push">
            <tasks>
              <exec command="make">
                <arg>pip-push</arg>
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
            </resources>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="setuptools-python-build-template">
      <stage name="python-setuptools-build">
        <jobs>
          <job name="package">
            <tasks>
              <exec command="gocd-scripts/build/setuptools-python-build.sh">
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>centos-7</resource>
              <resource>physical</resource>
            </resources>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="apie-deploy">
      <stage name="pre">
        <jobs>
          <job name="pre-deploy">
            <tasks>
              <exec command="make">
                <arg>pre-deploy</arg>
                <arg>env=#{env}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>centos-7</resource>
              <resource>physical</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="migrate">
        <jobs>
          <job name="docker-sql-migrations">
            <tasks>
              <exec command="make">
                <arg>docker-sql-migrations</arg>
                <arg>env=#{env}</arg>
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>centos-7</resource>
              <resource>physical</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="deploy">
        <jobs>
          <job name="deploy">
            <tasks>
              <exec command="make">
                <arg>deploy-docker</arg>
                <arg>env=#{env}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>centos-7</resource>
              <resource>physical</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="post">
        <jobs>
          <job name="post-deploy">
            <tasks>
              <exec command="make">
                <arg>post-deploy</arg>
                <arg>env=#{env}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>centos-7</resource>
              <resource>physical</resource>
            </resources>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="setuptools-api-deploy">
      <stage name="promote-pkgs">
        <approval type="manual" />
        <jobs>
          <job name="promote-etl">
            <environmentvariables>
              <variable name="PACKAGE">
                <value>ox3-api-v2</value>
              </variable>
              <variable name="CONSUL_KEY">
                <value>etl</value>
              </variable>
            </environmentvariables>
            <tasks>
              <exec command="./deploy/setuptools-simple-deploy.sh" workingdir="gocd-scripts">
                <arg>promote-pkgs</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>physical</resource>
              <resource>centos-7</resource>
            </resources>
          </job>
          <job name="promote-consumers">
            <environmentvariables>
              <variable name="PACKAGE">
                <value>ox3-api-v2 ox3-api-etl-consumer</value>
              </variable>
              <variable name="CONSUL_KEY">
                <value>consumers</value>
              </variable>
            </environmentvariables>
            <tasks>
              <exec command="./deploy/setuptools-simple-deploy.sh" workingdir="gocd-scripts">
                <arg>promote-pkgs</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>centos-7</resource>
              <resource>physical</resource>
            </resources>
          </job>
          <job name="promote-es-consumer">
            <environmentvariables>
              <variable name="PACKAGE">
                <value>ox3-api-es-consumer</value>
              </variable>
              <variable name="CONSUL_KEY">
                <value>es-consumer</value>
              </variable>
            </environmentvariables>
            <tasks>
              <exec command="./deploy/setuptools-simple-deploy.sh" workingdir="gocd-scripts">
                <arg>promote-pkgs</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>centos-7</resource>
              <resource>physical</resource>
            </resources>
          </job>
          <job name="promote-api-service">
            <environmentvariables>
              <variable name="PACKAGE">
                <value>ox3-api-v2</value>
              </variable>
              <variable name="CONSUL_KEY">
                <value>service</value>
              </variable>
            </environmentvariables>
            <tasks>
              <exec command="./deploy/setuptools-simple-deploy.sh" workingdir="gocd-scripts">
                <arg>promote-pkgs</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>centos-7</resource>
              <resource>physical</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="upgrade-pkgs">
        <jobs>
          <job name="upgrade_openx-app.api.etl">
            <environmentvariables>
              <variable name="DEPLOY_ROLE">
                <value>openx-app.api.etl</value>
              </variable>
            </environmentvariables>
            <tasks>
              <exec command="./deploy/setuptools-simple-deploy.sh" workingdir="gocd-scripts">
                <arg>upgrade-pkgs</arg>
              </exec>
            </tasks>
            <resources>
              <resource>centos-7</resource>
            </resources>
          </job>
          <job name="upgrade_openx-app.api.consumers">
            <environmentvariables>
              <variable name="DEPLOY_ROLE">
                <value>openx-app.api.consumers</value>
              </variable>
            </environmentvariables>
            <tasks>
              <exec command="./deploy/setuptools-simple-deploy.sh" workingdir="gocd-scripts">
                <arg>upgrade-pkgs</arg>
              </exec>
            </tasks>
            <resources>
              <resource>centos-7</resource>
            </resources>
          </job>
          <job name="upgrade_openx-app.api.service">
            <environmentvariables>
              <variable name="DEPLOY_ROLE">
                <value>openx-app.api.service</value>
              </variable>
            </environmentvariables>
            <tasks>
              <exec command="./deploy/setuptools-simple-deploy.sh" workingdir="gocd-scripts">
                <arg>upgrade-pkgs</arg>
              </exec>
            </tasks>
            <resources>
              <resource>centos-7</resource>
            </resources>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="setuptools-api-deploy-auto">
      <stage name="wait_30_sec_for_artifactory">
        <jobs>
          <job name="wait_30_sec_for_artifactory">
            <tasks>
              <exec command="sleep" workingdir="gocd-scripts">
                <arg>30</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>centos-7</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="promote-pkgs">
        <jobs>
          <job name="promote-etl">
            <environmentvariables>
              <variable name="PACKAGE">
                <value>ox3-api-v2</value>
              </variable>
              <variable name="CONSUL_KEY">
                <value>etl</value>
              </variable>
            </environmentvariables>
            <tasks>
              <exec command="./deploy/setuptools-simple-deploy.sh" workingdir="gocd-scripts">
                <arg>promote-pkgs</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>centos-7</resource>
            </resources>
          </job>
          <job name="promote-consumers">
            <environmentvariables>
              <variable name="PACKAGE">
                <value>ox3-api-v2 ox3-api-etl-consumer</value>
              </variable>
              <variable name="CONSUL_KEY">
                <value>consumers</value>
              </variable>
            </environmentvariables>
            <tasks>
              <exec command="./deploy/setuptools-simple-deploy.sh" workingdir="gocd-scripts">
                <arg>promote-pkgs</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>centos-7</resource>
            </resources>
          </job>
          <job name="promote-es-consumer">
            <environmentvariables>
              <variable name="PACKAGE">
                <value>ox3-api-es-consumer</value>
              </variable>
              <variable name="CONSUL_KEY">
                <value>es-consumer</value>
              </variable>
            </environmentvariables>
            <tasks>
              <exec command="./deploy/setuptools-simple-deploy.sh" workingdir="gocd-scripts">
                <arg>promote-pkgs</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>centos-7</resource>
            </resources>
          </job>
          <job name="promote-api-service">
            <environmentvariables>
              <variable name="PACKAGE">
                <value>ox3-api-v2</value>
              </variable>
              <variable name="CONSUL_KEY">
                <value>service</value>
              </variable>
            </environmentvariables>
            <tasks>
              <exec command="./deploy/setuptools-simple-deploy.sh" workingdir="gocd-scripts">
                <arg>promote-pkgs</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>centos-7</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="upgrade-pkgs">
        <jobs>
          <job name="upgrade_openx-app.api.etl">
            <environmentvariables>
              <variable name="DEPLOY_ROLE">
                <value>openx-app.api.etl</value>
              </variable>
            </environmentvariables>
            <tasks>
              <exec command="./deploy/setuptools-simple-deploy.sh" workingdir="gocd-scripts">
                <arg>upgrade-pkgs</arg>
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>centos-7</resource>
            </resources>
          </job>
          <job name="upgrade_openx-app.api.consumers">
            <environmentvariables>
              <variable name="DEPLOY_ROLE">
                <value>openx-app.api.consumers</value>
              </variable>
            </environmentvariables>
            <tasks>
              <exec command="./deploy/setuptools-simple-deploy.sh" workingdir="gocd-scripts">
                <arg>upgrade-pkgs</arg>
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>centos-7</resource>
            </resources>
          </job>
          <job name="upgrade_openx-app.api.service">
            <environmentvariables>
              <variable name="DEPLOY_ROLE">
                <value>openx-app.api.service</value>
              </variable>
            </environmentvariables>
            <tasks>
              <exec command="./deploy/setuptools-simple-deploy.sh" workingdir="gocd-scripts">
                <arg>upgrade-pkgs</arg>
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>centos-7</resource>
            </resources>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="setuptools-api-deploy-etl-consumer">
      <stage name="promote-pkgs">
        <approval type="manual" />
        <jobs>
          <job name="promote-etl-consumer">
            <environmentvariables>
              <variable name="PACKAGE">
                <value>ox3-api-etl-consumer</value>
              </variable>
              <variable name="CONSUL_KEY">
                <value>etl-consumer</value>
              </variable>
            </environmentvariables>
            <tasks>
              <exec command="./deploy/setuptools-simple-deploy.sh" workingdir="gocd-scripts">
                <arg>promote-pkgs</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>physical</resource>
              <resource>centos-7</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="upgrade-pkgs">
        <jobs>
          <job name="upgrade-all-pkgs">
            <environmentvariables>
              <variable name="DEPLOY_ROLES">
                <value>openx-app.api.etl-consumer</value>
              </variable>
            </environmentvariables>
            <tasks>
              <exec command="./deploy/setuptools-simple-deploy.sh" workingdir="gocd-scripts">
                <arg>upgrade-all-pkgs</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>centos-7</resource>
              <resource>physical</resource>
            </resources>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="perm-app-deploy">
      <stage name="pre">
        <approval type="manual" />
        <environmentvariables>
          <variable name="test">
            <value>ola</value>
          </variable>
        </environmentvariables>
        <jobs>
          <job name="pre-deploy">
            <tasks>
              <exec command="git">
                <arg>fetch</arg>
                <runif status="passed" />
              </exec>
              <exec command="git">
                <arg>checkout</arg>
                <arg>tags/#{APP_VERSION}</arg>
                <runif status="passed" />
              </exec>
              <exec command="make">
                <arg>test</arg>
                <runif status="passed" />
              </exec>
              <exec command="make">
                <arg>pre-deploy</arg>
                <arg>env=#{env}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>physical</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="deploy">
        <jobs>
          <job name="deploy">
            <tasks>
              <exec command="make">
                <arg>deploy-docker</arg>
                <arg>env=#{env}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>physical</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="post">
        <jobs>
          <job name="post-deploy">
            <tasks>
              <exec command="make">
                <arg>post-deploy</arg>
                <arg>env=#{env}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>physical</resource>
            </resources>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="perm-app-deploy-no-test">
      <stage name="pre">
        <approval type="manual" />
        <environmentvariables>
          <variable name="test">
            <value>ola</value>
          </variable>
        </environmentvariables>
        <jobs>
          <job name="pre-deploy">
            <tasks>
              <exec command="git">
                <arg>fetch</arg>
                <runif status="passed" />
              </exec>
              <exec command="git">
                <arg>checkout</arg>
                <arg>tags/#{APP_VERSION}</arg>
                <runif status="passed" />
              </exec>
              <exec command="make">
                <arg>pre-deploy</arg>
                <arg>env=#{env}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>physical</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="deploy">
        <jobs>
          <job name="deploy">
            <tasks>
              <exec command="make">
                <arg>deploy-docker</arg>
                <arg>env=#{env}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>physical</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="post">
        <jobs>
          <job name="post-deploy">
            <tasks>
              <exec command="make">
                <arg>post-deploy</arg>
                <arg>env=#{env}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>physical</resource>
            </resources>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="setuptools-deploy">
      <stage name="promote-pkg">
        <approval type="manual" />
        <jobs>
          <job name="promote-service">
            <environmentvariables>
              <variable name="PACKAGE">
                <value>auth-service</value>
              </variable>
              <variable name="CONSUL_KEY">
                <value>auth-service</value>
              </variable>
              <variable name="CONSUL_BUCKET">
                <value>api-deploy/py36</value>
              </variable>
              <variable name="VENV_BIN">
                <value>/usr/bin/pyvenv-3.6</value>
              </variable>
            </environmentvariables>
            <tasks>
              <exec command="./deploy/setuptools-simple-deploy.sh" workingdir="gocd-scripts">
                <arg>promote-pkgs</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>centos-7</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="upgrade-pkg">
        <jobs>
          <job name="upgrade_openx-app.api.auth-service">
            <environmentvariables>
              <variable name="DEPLOY_ROLE">
                <value>openx-app.api.auth-service</value>
              </variable>
            </environmentvariables>
            <tasks>
              <exec command="./deploy/setuptools-simple-deploy.sh" workingdir="gocd-scripts">
                <arg>upgrade-pkgs</arg>
              </exec>
            </tasks>
            <resources>
              <resource>centos-7</resource>
              <resource>build-host</resource>
            </resources>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="perm-app-build-deploy-staging">
      <stage name="test">
        <jobs>
          <job name="make-test">
            <tasks>
              <exec command="make">
                <arg>test</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>centos-7</resource>
              <resource>physical</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="build">
        <jobs>
          <job name="make-docker-build">
            <tasks>
              <exec command="make">
                <arg>docker-build</arg>
                <arg>version=#{DOCKERTAG}</arg>
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>centos-7</resource>
              <resource>physical</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="gcr-login">
        <jobs>
          <job name="gcr-login">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>echo "$gcr_key_json" | docker login -u _json_key --password-stdin https://us.gcr.master.openx.org</arg>
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>centos-7</resource>
              <resource>physical</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="push">
        <jobs>
          <job name="docker-push">
            <tasks>
              <exec command="make">
                <arg>docker-push</arg>
                <arg>version=#{DOCKERTAG}</arg>
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>centos-7</resource>
              <resource>physical</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="pre">
        <jobs>
          <job name="pre-deploy">
            <tasks>
              <exec command="make">
                <arg>pre-deploy</arg>
                <arg>env=#{env}</arg>
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>centos-7</resource>
              <resource>physical</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="migrate">
        <jobs>
          <job name="docker-sql-migrations">
            <tasks>
              <exec command="make">
                <arg>docker-sql-migrations</arg>
                <arg>env=#{env}</arg>
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>centos-7</resource>
              <resource>physical</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="deploy">
        <jobs>
          <job name="deploy">
            <tasks>
              <exec command="make">
                <arg>deploy-docker</arg>
                <arg>env=#{env}</arg>
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>centos-7</resource>
              <resource>physical</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="post">
        <jobs>
          <job name="post-deploy">
            <tasks>
              <exec command="make">
                <arg>post-deploy</arg>
                <arg>env=#{env}</arg>
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>centos-7</resource>
              <resource>physical</resource>
            </resources>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="perm-app-build-deploy">
      <stage name="test">
        <jobs>
          <job name="make-test">
            <tasks>
              <exec command="make">
                <arg>test</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>centos-7</resource>
              <resource>physical</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="build">
        <jobs>
          <job name="make-docker-build">
            <tasks>
              <exec command="make">
                <arg>docker-build</arg>
                <arg>version=#{DOCKERTAG}</arg>
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>centos-7</resource>
              <resource>physical</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="gcr-login">
        <jobs>
          <job name="gcr-login">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>echo "$gcr_key_json" | docker login -u _json_key --password-stdin https://us.gcr.master.openx.org</arg>
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>centos-7</resource>
              <resource>physical</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="push">
        <jobs>
          <job name="docker-push">
            <tasks>
              <exec command="make">
                <arg>docker-push</arg>
                <arg>version=#{DOCKERTAG}</arg>
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>centos-7</resource>
              <resource>physical</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="pre">
        <jobs>
          <job name="pre-deploy">
            <tasks>
              <exec command="make">
                <arg>pre-deploy</arg>
                <arg>env=#{env}</arg>
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>centos-7</resource>
              <resource>physical</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="migrate">
        <jobs>
          <job name="docker-sql-migrations">
            <tasks>
              <exec command="make">
                <arg>docker-sql-migrations</arg>
                <arg>env=#{env}</arg>
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>centos-7</resource>
              <resource>physical</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="deploy">
        <jobs>
          <job name="deploy">
            <tasks>
              <exec command="make">
                <arg>deploy-docker</arg>
                <arg>env=#{env}</arg>
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>centos-7</resource>
              <resource>physical</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="post">
        <jobs>
          <job name="post-deploy">
            <tasks>
              <exec command="make">
                <arg>post-deploy</arg>
                <arg>env=#{env}</arg>
              </exec>
            </tasks>
            <resources>
              <resource>build-host</resource>
              <resource>centos-7</resource>
              <resource>physical</resource>
            </resources>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </templates>
  <environments>
    <environment name="foobar">
      <environmentvariables>
        <variable name="FOO">
          <value>1</value>
        </variable>
        <variable name="BAR">
          <value>2</value>
        </variable>
        <variable name="BAZ" secure="true">
          <encryptedValue>7EFIk3EVCjo=</encryptedValue>
        </variable>
      </environmentvariables>
    </environment>
  </environments>
  <agents>
    <agent hostname="cabb-l39.ca.dc.openx.org" ipaddress="10.5.134.40" uuid="d575ba0d-06bb-4443-845a-81c75042c189">
      <resources>
        <resource>build-host</resource>
        <resource>centos-7</resource>
        <resource>physical</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-6cb4f393d9e4" ipaddress="172.17.0.2" uuid="c78d7b8a-96ac-4f6c-817a-fb0a295432ae">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-b666a6cde575" ipaddress="172.17.0.3" uuid="c8d376ef-777f-4772-8716-8303fa57cb7c">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-33927fe9a75f" ipaddress="172.17.0.4" uuid="3fe27e30-eff3-448e-a0d0-feec5f1966a7">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-0a5858869c0b" ipaddress="172.17.0.5" uuid="d5e28ff0-5f45-49e3-ab4b-59fc14fe263c">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-89b246562eff" ipaddress="172.17.0.6" uuid="050597e6-fb02-4825-8baa-aec3b72ee318">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-0a1cebf67855" ipaddress="172.17.0.7" uuid="550fe35a-e710-4c12-8914-b268105f4828">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-f8ac304227b0" ipaddress="172.17.0.8" uuid="4bd43d65-e7e8-4292-a649-27bb4b3ca591">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-e23aa65d0b9e" ipaddress="172.17.0.9" uuid="f619b4eb-82d4-4ba5-b336-8c1547aace07">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-6d86971b7f9c" ipaddress="172.17.0.10" uuid="ec417f14-befe-41d6-8992-2d2ecb1a972a">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-1b21be09692e" ipaddress="172.17.0.11" uuid="112c11eb-3ef8-40a9-95c3-e47e8a527c86">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-1223538d911f" ipaddress="172.17.0.12" uuid="c782673d-0ea2-4980-bc37-c0699db958e0">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-774ff9e8ccf6" ipaddress="172.17.0.13" uuid="e42c858e-6993-432f-a969-23b257b89ec3">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-ff08c7394660" ipaddress="172.17.0.14" uuid="6f39594e-f58f-45a6-8a14-685e6eeb054b">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-f8f6eac8755d" ipaddress="172.17.0.15" uuid="4591476b-02c2-4cd8-a78a-09bd08a26e7d">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-7bfc3ffa2dab" ipaddress="172.17.0.2" uuid="e5eb3ade-83f3-4904-b886-2f0c3239a1c9">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-909574db1089" ipaddress="172.17.0.3" uuid="713e41cb-48bf-4cd2-b3cf-25d6bb53ab4b">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-25765d13ab59" ipaddress="172.17.0.4" uuid="3388b27a-5c4c-4218-aa1b-5c0a1eeb0acd">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-505ff8fc61ee" ipaddress="172.17.0.5" uuid="ac957165-792c-4bba-837f-6f16c42e32c6">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-f0223e180251" ipaddress="172.17.0.6" uuid="5e82b383-67c5-4c1a-a933-9b75f9f88fee">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-4e754f43c300" ipaddress="172.17.0.7" uuid="329fc4d6-9974-4d7f-8a08-443558ecf709">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-ba30e8e58360" ipaddress="172.17.0.8" uuid="5fd0d717-1576-4f0c-bd8f-4104bffa6b9e">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-185f92e39d7a" ipaddress="172.17.0.9" uuid="53e4db3a-c698-45d8-8a21-a5034f388490">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-9b56277de3a0" ipaddress="172.17.0.10" uuid="7d28284f-58a4-434d-bfbd-bacd4a8cfde8">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-3d6c6887b27e" ipaddress="172.17.0.11" uuid="c6c11e60-7dc9-4a5d-a6cb-89fe8a585ab8">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-fcceb4435d28" ipaddress="172.17.0.12" uuid="f5662f15-a742-4023-ac67-7099882abec9">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-a486eb4d92a0" ipaddress="172.17.0.13" uuid="7c986b0a-be62-4a91-8307-7787c63a3ce7">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-cbdc252b7d6f" ipaddress="172.17.0.14" uuid="933f7fb0-4134-4488-8d10-9959524c3292">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-547141870102" ipaddress="172.17.0.15" uuid="78e6936f-e2b5-445e-8ba8-c6c2b521f0ce">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-f843ff2fb7d2" ipaddress="172.17.0.16" uuid="a9526723-2db0-480b-a7a9-f45bbb8b99a8">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-54d708b4d981" ipaddress="172.17.0.17" uuid="7c744d41-b2de-4a01-8c2c-17fdd7d43747">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-91a25d80d133" ipaddress="172.17.0.18" uuid="c6f12404-3b0d-4f48-8d78-fc892dd0d1dd">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-5980272146d9" ipaddress="172.17.0.2" uuid="aa8b2d95-797f-4725-b4a2-2e36a1a84862">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-aeb767e8f987" ipaddress="172.17.0.3" uuid="1e66089c-e7b0-4978-a988-a279d8cf6003">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-21aeb2739c1a" ipaddress="172.17.0.4" uuid="55158140-b296-4950-ac72-1e2f57a0f85e">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-27690ac27a55" ipaddress="172.17.0.5" uuid="eebded3f-a027-43b1-85a1-dfb6da0bc902">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-446554b9ac80" ipaddress="172.17.0.6" uuid="62fd3149-bf26-4b1d-8ea6-8b6a232e2906">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-f3ebe7f46db2" ipaddress="172.17.0.7" uuid="020c5fff-8f54-4f09-88d1-c8a1ac29961c">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-7c3f3b43f9e9" ipaddress="172.17.0.8" uuid="63ca93c1-68af-4d5d-aa0a-e86e4c3d348a">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-1ec17e966453" ipaddress="172.17.0.9" uuid="78180531-2d5b-4ae9-b114-6fd83287f1e3">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-da9d581fac5d" ipaddress="172.17.0.10" uuid="5a53b809-46e9-4fb2-8dbf-5eaf58b44fe0">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-2e27ac73eac6" ipaddress="172.17.0.11" uuid="c1a6792b-3e54-4271-91f1-cda2213c9d85">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-94e7fe976041" ipaddress="172.17.0.12" uuid="925643d2-0b20-4d54-bf92-383d5b012062">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-a2a9b48fa40b" ipaddress="172.17.0.13" uuid="e1b3eed3-b674-4196-97fe-579802c7a937">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-50cf998c1a69" ipaddress="172.17.0.14" uuid="5074701e-7aab-4814-9b97-2094f259cc78">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-ff61f82a2961" ipaddress="172.17.0.15" uuid="2fa70e8d-d0bf-4b2d-9c35-9e0da0d1a77e">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-3ee9a02ac403" ipaddress="172.17.0.16" uuid="f9d525b5-43a3-4dff-ad6d-3d68d1533cfc">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-0ed2f6255c1a" ipaddress="172.17.0.17" uuid="17683236-bf6a-4127-b75a-8cd4e892ca74">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-d3e5cd70cd38" ipaddress="172.17.0.18" uuid="ef5f9ded-6ed3-4da1-8340-ac071c51d4b9">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-f55816dbbea5" ipaddress="172.17.0.22" uuid="e4df7f99-f3db-42cd-9152-5cf1ca3ebb78">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-0e1412809258" ipaddress="172.17.0.23" uuid="da3683f7-3ac4-421c-85c2-ff4eeb59c823">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-1b1fdaf68c00" ipaddress="172.17.0.24" uuid="7f4ae2d0-7dbd-4871-b08c-df72c756b4a1">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-5f20f20a8c8b" ipaddress="172.17.0.19" uuid="e2698e60-358f-47c9-ba8b-83f0b2c47e7c">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-8ec410360080" ipaddress="172.17.0.20" uuid="6c8003df-9e9a-4552-a99c-2980faf705d6">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-6309325e6b14" ipaddress="172.17.0.21" uuid="c1d9593e-5f6b-4626-9ec4-f8d09710d3c1">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-7c0574596ad3" ipaddress="172.17.0.25" uuid="049f4395-3be1-4fa8-befb-e0c6ba060090">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-ed05cf0d8380" ipaddress="172.17.0.26" uuid="f3e6233c-df4e-46f7-acbc-eb0b32f8a1d2">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-73ba2bad6170" ipaddress="172.17.0.27" uuid="b9b9a786-518f-476b-97a5-72e4c0d13390">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-cfec1f7ad4e8" ipaddress="172.17.0.28" uuid="69002e32-5eab-4bc9-95f7-42b98e0955ad">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-ded10927080a" ipaddress="172.17.0.29" uuid="525fbd6f-05c0-40a8-96e8-63830b404d36">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-23e4468fc09b" ipaddress="172.17.0.30" uuid="eec879f6-b2fc-4c81-9b91-57af95f180e2">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-1927bb2580b6" ipaddress="172.17.0.31" uuid="86e4db24-f575-45c5-9636-73a7f0ef1510">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-7cd4df987d79" ipaddress="172.17.0.32" uuid="e2a9cbf4-98fd-4249-a8a1-e08ebba1c2cd">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-af617bbfbb61" ipaddress="172.17.0.33" uuid="e956dbf5-6aa8-49cd-a1b8-379866c4b3ba">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-971499c78bea" ipaddress="172.17.0.34" uuid="f7e42ed7-4e79-41df-8b06-5c20a6bad9ea">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-11530b255f6f" ipaddress="172.17.0.35" uuid="e63bb650-9ffc-44c4-9c64-4802d48a4a71">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-8f1f56db483c" ipaddress="172.17.0.36" uuid="5a6e36c1-0e61-4dce-9eea-46cbc9dcb73e">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-c8ef36c6c7e8" ipaddress="172.17.0.37" uuid="3b92054f-d652-4c2d-80cf-d9c41ce7f4b0">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-56207bfe229a" ipaddress="172.17.0.38" uuid="cfc8498b-25b3-44e2-b26a-a2505ba23667">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-fb347dbbd95d" ipaddress="172.17.0.39" uuid="b6e05d26-bdaa-4501-9d82-ace9622da4f4">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-f3a6fbe84b1f" ipaddress="172.17.0.40" uuid="72417b1e-fd77-49fb-8489-45221cb85177">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-9eed55c07215" ipaddress="172.17.0.2" uuid="cffca5bb-b692-4766-b502-6c385d98952a">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-5c98bb0d287e" ipaddress="172.17.0.3" uuid="6078a78c-8824-459c-a577-b990542ed5d5">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-e6585c2fa738" ipaddress="172.17.0.4" uuid="dd623ade-b79b-4a57-828a-ca36584b79f6">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
    <agent hostname="qa-c65-b32f6c0385b7" ipaddress="172.17.0.5" uuid="35a37d80-b045-4e2c-ab1a-a0f6288bc89c">
      <resources>
        <resource>centos-7</resource>
        <resource>irobot</resource>
      </resources>
    </agent>
  </agents>
</cruise>